#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Niagara

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Niagara_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Niagara.NiagaraComponent.AdvanceSimulation
// 0x0008 (0x0008 - 0x0000)
struct NiagaraComponent_AdvanceSimulation final
{
public:
	int32                                         TickCount;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TickDeltaSeconds;                                  // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_AdvanceSimulation) == 0x000004, "Wrong alignment on NiagaraComponent_AdvanceSimulation");
static_assert(sizeof(NiagaraComponent_AdvanceSimulation) == 0x000008, "Wrong size on NiagaraComponent_AdvanceSimulation");
static_assert(offsetof(NiagaraComponent_AdvanceSimulation, TickCount) == 0x000000, "Member 'NiagaraComponent_AdvanceSimulation::TickCount' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_AdvanceSimulation, TickDeltaSeconds) == 0x000004, "Member 'NiagaraComponent_AdvanceSimulation::TickDeltaSeconds' has a wrong offset!");

// Function Niagara.NiagaraComponent.AdvanceSimulationByTime
// 0x0008 (0x0008 - 0x0000)
struct NiagaraComponent_AdvanceSimulationByTime final
{
public:
	float                                         SimulateTime;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TickDeltaSeconds;                                  // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_AdvanceSimulationByTime) == 0x000004, "Wrong alignment on NiagaraComponent_AdvanceSimulationByTime");
static_assert(sizeof(NiagaraComponent_AdvanceSimulationByTime) == 0x000008, "Wrong size on NiagaraComponent_AdvanceSimulationByTime");
static_assert(offsetof(NiagaraComponent_AdvanceSimulationByTime, SimulateTime) == 0x000000, "Member 'NiagaraComponent_AdvanceSimulationByTime::SimulateTime' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_AdvanceSimulationByTime, TickDeltaSeconds) == 0x000004, "Member 'NiagaraComponent_AdvanceSimulationByTime::TickDeltaSeconds' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetActualEffectType
// 0x0008 (0x0008 - 0x0000)
struct NiagaraComponent_GetActualEffectType final
{
public:
	class UNiagaraEffectType*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetActualEffectType) == 0x000008, "Wrong alignment on NiagaraComponent_GetActualEffectType");
static_assert(sizeof(NiagaraComponent_GetActualEffectType) == 0x000008, "Wrong size on NiagaraComponent_GetActualEffectType");
static_assert(offsetof(NiagaraComponent_GetActualEffectType, ReturnValue) == 0x000000, "Member 'NiagaraComponent_GetActualEffectType::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetDataInterface
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_GetDataInterface final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraDataInterface*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetDataInterface) == 0x000008, "Wrong alignment on NiagaraComponent_GetDataInterface");
static_assert(sizeof(NiagaraComponent_GetDataInterface) == 0x000018, "Wrong size on NiagaraComponent_GetDataInterface");
static_assert(offsetof(NiagaraComponent_GetDataInterface, Name_0) == 0x000000, "Member 'NiagaraComponent_GetDataInterface::Name_0' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_GetDataInterface, ReturnValue) == 0x000010, "Member 'NiagaraComponent_GetDataInterface::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetNiagaraParticlePositions_DebugOnly
// 0x0020 (0x0020 - 0x0000)
struct NiagaraComponent_GetNiagaraParticlePositions_DebugOnly final
{
public:
	class FString                                 InEmitterName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetNiagaraParticlePositions_DebugOnly) == 0x000008, "Wrong alignment on NiagaraComponent_GetNiagaraParticlePositions_DebugOnly");
static_assert(sizeof(NiagaraComponent_GetNiagaraParticlePositions_DebugOnly) == 0x000020, "Wrong size on NiagaraComponent_GetNiagaraParticlePositions_DebugOnly");
static_assert(offsetof(NiagaraComponent_GetNiagaraParticlePositions_DebugOnly, InEmitterName) == 0x000000, "Member 'NiagaraComponent_GetNiagaraParticlePositions_DebugOnly::InEmitterName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_GetNiagaraParticlePositions_DebugOnly, ReturnValue) == 0x000010, "Member 'NiagaraComponent_GetNiagaraParticlePositions_DebugOnly::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetNiagaraParticleValues_DebugOnly
// 0x0030 (0x0030 - 0x0000)
struct NiagaraComponent_GetNiagaraParticleValues_DebugOnly final
{
public:
	class FString                                 InEmitterName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InValueName;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetNiagaraParticleValues_DebugOnly) == 0x000008, "Wrong alignment on NiagaraComponent_GetNiagaraParticleValues_DebugOnly");
static_assert(sizeof(NiagaraComponent_GetNiagaraParticleValues_DebugOnly) == 0x000030, "Wrong size on NiagaraComponent_GetNiagaraParticleValues_DebugOnly");
static_assert(offsetof(NiagaraComponent_GetNiagaraParticleValues_DebugOnly, InEmitterName) == 0x000000, "Member 'NiagaraComponent_GetNiagaraParticleValues_DebugOnly::InEmitterName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_GetNiagaraParticleValues_DebugOnly, InValueName) == 0x000010, "Member 'NiagaraComponent_GetNiagaraParticleValues_DebugOnly::InValueName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_GetNiagaraParticleValues_DebugOnly, ReturnValue) == 0x000020, "Member 'NiagaraComponent_GetNiagaraParticleValues_DebugOnly::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetNiagaraParticleValueVec3_DebugOnly
// 0x0030 (0x0030 - 0x0000)
struct NiagaraComponent_GetNiagaraParticleValueVec3_DebugOnly final
{
public:
	class FString                                 InEmitterName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InValueName;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetNiagaraParticleValueVec3_DebugOnly) == 0x000008, "Wrong alignment on NiagaraComponent_GetNiagaraParticleValueVec3_DebugOnly");
static_assert(sizeof(NiagaraComponent_GetNiagaraParticleValueVec3_DebugOnly) == 0x000030, "Wrong size on NiagaraComponent_GetNiagaraParticleValueVec3_DebugOnly");
static_assert(offsetof(NiagaraComponent_GetNiagaraParticleValueVec3_DebugOnly, InEmitterName) == 0x000000, "Member 'NiagaraComponent_GetNiagaraParticleValueVec3_DebugOnly::InEmitterName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_GetNiagaraParticleValueVec3_DebugOnly, InValueName) == 0x000010, "Member 'NiagaraComponent_GetNiagaraParticleValueVec3_DebugOnly::InValueName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_GetNiagaraParticleValueVec3_DebugOnly, ReturnValue) == 0x000020, "Member 'NiagaraComponent_GetNiagaraParticleValueVec3_DebugOnly::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetRuntimeEffectType
// 0x0008 (0x0008 - 0x0000)
struct NiagaraComponent_GetRuntimeEffectType final
{
public:
	class UNiagaraEffectType*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetRuntimeEffectType) == 0x000008, "Wrong alignment on NiagaraComponent_GetRuntimeEffectType");
static_assert(sizeof(NiagaraComponent_GetRuntimeEffectType) == 0x000008, "Wrong size on NiagaraComponent_GetRuntimeEffectType");
static_assert(offsetof(NiagaraComponent_GetRuntimeEffectType, ReturnValue) == 0x000000, "Member 'NiagaraComponent_GetRuntimeEffectType::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.HasAnyEmittersComplete
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_HasAnyEmittersComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_HasAnyEmittersComplete) == 0x000001, "Wrong alignment on NiagaraComponent_HasAnyEmittersComplete");
static_assert(sizeof(NiagaraComponent_HasAnyEmittersComplete) == 0x000001, "Wrong size on NiagaraComponent_HasAnyEmittersComplete");
static_assert(offsetof(NiagaraComponent_HasAnyEmittersComplete, ReturnValue) == 0x000000, "Member 'NiagaraComponent_HasAnyEmittersComplete::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.HasSkeletalMeshDataInterface
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_HasSkeletalMeshDataInterface final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_HasSkeletalMeshDataInterface) == 0x000001, "Wrong alignment on NiagaraComponent_HasSkeletalMeshDataInterface");
static_assert(sizeof(NiagaraComponent_HasSkeletalMeshDataInterface) == 0x000001, "Wrong size on NiagaraComponent_HasSkeletalMeshDataInterface");
static_assert(offsetof(NiagaraComponent_HasSkeletalMeshDataInterface, ReturnValue) == 0x000000, "Member 'NiagaraComponent_HasSkeletalMeshDataInterface::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.ResetOverrideParametersAndActivate
// 0x0020 (0x0020 - 0x0000)
struct NiagaraComponent_ResetOverrideParametersAndActivate final
{
public:
	bool                                          bReset;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExceptOverrideName;                                // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraComponent_ResetOverrideParametersAndActivate) == 0x000008, "Wrong alignment on NiagaraComponent_ResetOverrideParametersAndActivate");
static_assert(sizeof(NiagaraComponent_ResetOverrideParametersAndActivate) == 0x000020, "Wrong size on NiagaraComponent_ResetOverrideParametersAndActivate");
static_assert(offsetof(NiagaraComponent_ResetOverrideParametersAndActivate, bReset) == 0x000000, "Member 'NiagaraComponent_ResetOverrideParametersAndActivate::bReset' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_ResetOverrideParametersAndActivate, ExceptOverrideName) == 0x000008, "Member 'NiagaraComponent_ResetOverrideParametersAndActivate::ExceptOverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_ResetOverrideParametersAndActivate, ReturnValue) == 0x000018, "Member 'NiagaraComponent_ResetOverrideParametersAndActivate::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SeekToDesiredAge
// 0x0004 (0x0004 - 0x0000)
struct NiagaraComponent_SeekToDesiredAge final
{
public:
	float                                         InDesiredAge;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SeekToDesiredAge) == 0x000004, "Wrong alignment on NiagaraComponent_SeekToDesiredAge");
static_assert(sizeof(NiagaraComponent_SeekToDesiredAge) == 0x000004, "Wrong size on NiagaraComponent_SeekToDesiredAge");
static_assert(offsetof(NiagaraComponent_SeekToDesiredAge, InDesiredAge) == 0x000000, "Member 'NiagaraComponent_SeekToDesiredAge::InDesiredAge' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetAgeUpdateMode
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_SetAgeUpdateMode final
{
public:
	ENiagaraAgeUpdateMode                         InAgeUpdateMode;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetAgeUpdateMode) == 0x000001, "Wrong alignment on NiagaraComponent_SetAgeUpdateMode");
static_assert(sizeof(NiagaraComponent_SetAgeUpdateMode) == 0x000001, "Wrong size on NiagaraComponent_SetAgeUpdateMode");
static_assert(offsetof(NiagaraComponent_SetAgeUpdateMode, InAgeUpdateMode) == 0x000000, "Member 'NiagaraComponent_SetAgeUpdateMode::InAgeUpdateMode' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetAllowScalability
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_SetAllowScalability final
{
public:
	bool                                          bAllow;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetAllowScalability) == 0x000001, "Wrong alignment on NiagaraComponent_SetAllowScalability");
static_assert(sizeof(NiagaraComponent_SetAllowScalability) == 0x000001, "Wrong size on NiagaraComponent_SetAllowScalability");
static_assert(offsetof(NiagaraComponent_SetAllowScalability, bAllow) == 0x000000, "Member 'NiagaraComponent_SetAllowScalability::bAllow' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetAsset
// 0x0008 (0x0008 - 0x0000)
struct NiagaraComponent_SetAsset final
{
public:
	class UNiagaraSystem*                         InAsset;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetAsset) == 0x000008, "Wrong alignment on NiagaraComponent_SetAsset");
static_assert(sizeof(NiagaraComponent_SetAsset) == 0x000008, "Wrong size on NiagaraComponent_SetAsset");
static_assert(offsetof(NiagaraComponent_SetAsset, InAsset) == 0x000000, "Member 'NiagaraComponent_SetAsset::InAsset' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetAutoDestroy
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_SetAutoDestroy final
{
public:
	bool                                          bInAutoDestroy;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetAutoDestroy) == 0x000001, "Wrong alignment on NiagaraComponent_SetAutoDestroy");
static_assert(sizeof(NiagaraComponent_SetAutoDestroy) == 0x000001, "Wrong size on NiagaraComponent_SetAutoDestroy");
static_assert(offsetof(NiagaraComponent_SetAutoDestroy, bInAutoDestroy) == 0x000000, "Member 'NiagaraComponent_SetAutoDestroy::bInAutoDestroy' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetCanRenderWhileSeeking
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_SetCanRenderWhileSeeking final
{
public:
	bool                                          bInCanRenderWhileSeeking;                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetCanRenderWhileSeeking) == 0x000001, "Wrong alignment on NiagaraComponent_SetCanRenderWhileSeeking");
static_assert(sizeof(NiagaraComponent_SetCanRenderWhileSeeking) == 0x000001, "Wrong size on NiagaraComponent_SetCanRenderWhileSeeking");
static_assert(offsetof(NiagaraComponent_SetCanRenderWhileSeeking, bInCanRenderWhileSeeking) == 0x000000, "Member 'NiagaraComponent_SetCanRenderWhileSeeking::bInCanRenderWhileSeeking' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetDesiredAge
// 0x0004 (0x0004 - 0x0000)
struct NiagaraComponent_SetDesiredAge final
{
public:
	float                                         InDesiredAge;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetDesiredAge) == 0x000004, "Wrong alignment on NiagaraComponent_SetDesiredAge");
static_assert(sizeof(NiagaraComponent_SetDesiredAge) == 0x000004, "Wrong size on NiagaraComponent_SetDesiredAge");
static_assert(offsetof(NiagaraComponent_SetDesiredAge, InDesiredAge) == 0x000000, "Member 'NiagaraComponent_SetDesiredAge::InDesiredAge' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetEmitterQualityLevelBias
// 0x0004 (0x0004 - 0x0000)
struct NiagaraComponent_SetEmitterQualityLevelBias final
{
public:
	int32                                         InBias;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetEmitterQualityLevelBias) == 0x000004, "Wrong alignment on NiagaraComponent_SetEmitterQualityLevelBias");
static_assert(sizeof(NiagaraComponent_SetEmitterQualityLevelBias) == 0x000004, "Wrong size on NiagaraComponent_SetEmitterQualityLevelBias");
static_assert(offsetof(NiagaraComponent_SetEmitterQualityLevelBias, InBias) == 0x000000, "Member 'NiagaraComponent_SetEmitterQualityLevelBias::InBias' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetForceSolo
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_SetForceSolo final
{
public:
	bool                                          bInForceSolo;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetForceSolo) == 0x000001, "Wrong alignment on NiagaraComponent_SetForceSolo");
static_assert(sizeof(NiagaraComponent_SetForceSolo) == 0x000001, "Wrong size on NiagaraComponent_SetForceSolo");
static_assert(offsetof(NiagaraComponent_SetForceSolo, bInForceSolo) == 0x000000, "Member 'NiagaraComponent_SetForceSolo::bInForceSolo' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetGpuComputeDebug
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_SetGpuComputeDebug final
{
public:
	bool                                          bEnableDebug;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetGpuComputeDebug) == 0x000001, "Wrong alignment on NiagaraComponent_SetGpuComputeDebug");
static_assert(sizeof(NiagaraComponent_SetGpuComputeDebug) == 0x000001, "Wrong size on NiagaraComponent_SetGpuComputeDebug");
static_assert(offsetof(NiagaraComponent_SetGpuComputeDebug, bEnableDebug) == 0x000000, "Member 'NiagaraComponent_SetGpuComputeDebug::bEnableDebug' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetKuroCustomTexture
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetKuroCustomTexture final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Texture;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetKuroCustomTexture) == 0x000008, "Wrong alignment on NiagaraComponent_SetKuroCustomTexture");
static_assert(sizeof(NiagaraComponent_SetKuroCustomTexture) == 0x000018, "Wrong size on NiagaraComponent_SetKuroCustomTexture");
static_assert(offsetof(NiagaraComponent_SetKuroCustomTexture, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetKuroCustomTexture::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetKuroCustomTexture, Texture) == 0x000010, "Member 'NiagaraComponent_SetKuroCustomTexture::Texture' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetKuroMaterial
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetKuroMaterial final
{
public:
	class FName                                   InEmitterName;                                     // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Mat;                                               // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetKuroMaterial) == 0x000008, "Wrong alignment on NiagaraComponent_SetKuroMaterial");
static_assert(sizeof(NiagaraComponent_SetKuroMaterial) == 0x000018, "Wrong size on NiagaraComponent_SetKuroMaterial");
static_assert(offsetof(NiagaraComponent_SetKuroMaterial, InEmitterName) == 0x000000, "Member 'NiagaraComponent_SetKuroMaterial::InEmitterName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetKuroMaterial, Mat) == 0x000010, "Member 'NiagaraComponent_SetKuroMaterial::Mat' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetKuroMaterialScalarParametre
// 0x0010 (0x0010 - 0x0000)
struct NiagaraComponent_SetKuroMaterialScalarParametre final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         val;                                               // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetKuroMaterialScalarParametre) == 0x000004, "Wrong alignment on NiagaraComponent_SetKuroMaterialScalarParametre");
static_assert(sizeof(NiagaraComponent_SetKuroMaterialScalarParametre) == 0x000010, "Wrong size on NiagaraComponent_SetKuroMaterialScalarParametre");
static_assert(offsetof(NiagaraComponent_SetKuroMaterialScalarParametre, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetKuroMaterialScalarParametre::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetKuroMaterialScalarParametre, val) == 0x00000C, "Member 'NiagaraComponent_SetKuroMaterialScalarParametre::val' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetKuroMaterialVectorParametre
// 0x001C (0x001C - 0x0000)
struct NiagaraComponent_SetKuroMaterialVectorParametre final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           vec;                                               // 0x000C(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetKuroMaterialVectorParametre) == 0x000004, "Wrong alignment on NiagaraComponent_SetKuroMaterialVectorParametre");
static_assert(sizeof(NiagaraComponent_SetKuroMaterialVectorParametre) == 0x00001C, "Wrong size on NiagaraComponent_SetKuroMaterialVectorParametre");
static_assert(offsetof(NiagaraComponent_SetKuroMaterialVectorParametre, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetKuroMaterialVectorParametre::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetKuroMaterialVectorParametre, vec) == 0x00000C, "Member 'NiagaraComponent_SetKuroMaterialVectorParametre::vec' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetKuroNiagaraEmitterCustomTexture
// 0x0028 (0x0028 - 0x0000)
struct NiagaraComponent_SetKuroNiagaraEmitterCustomTexture final
{
public:
	class FString                                 InEmitterName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InVariableName;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               Texture;                                           // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetKuroNiagaraEmitterCustomTexture) == 0x000008, "Wrong alignment on NiagaraComponent_SetKuroNiagaraEmitterCustomTexture");
static_assert(sizeof(NiagaraComponent_SetKuroNiagaraEmitterCustomTexture) == 0x000028, "Wrong size on NiagaraComponent_SetKuroNiagaraEmitterCustomTexture");
static_assert(offsetof(NiagaraComponent_SetKuroNiagaraEmitterCustomTexture, InEmitterName) == 0x000000, "Member 'NiagaraComponent_SetKuroNiagaraEmitterCustomTexture::InEmitterName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetKuroNiagaraEmitterCustomTexture, InVariableName) == 0x000010, "Member 'NiagaraComponent_SetKuroNiagaraEmitterCustomTexture::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetKuroNiagaraEmitterCustomTexture, Texture) == 0x000020, "Member 'NiagaraComponent_SetKuroNiagaraEmitterCustomTexture::Texture' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetKuroNiagaraEmitterFloatParam
// 0x0028 (0x0028 - 0x0000)
struct NiagaraComponent_SetKuroNiagaraEmitterFloatParam final
{
public:
	class FString                                 InEmitterName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InVariableName;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraComponent_SetKuroNiagaraEmitterFloatParam) == 0x000008, "Wrong alignment on NiagaraComponent_SetKuroNiagaraEmitterFloatParam");
static_assert(sizeof(NiagaraComponent_SetKuroNiagaraEmitterFloatParam) == 0x000028, "Wrong size on NiagaraComponent_SetKuroNiagaraEmitterFloatParam");
static_assert(offsetof(NiagaraComponent_SetKuroNiagaraEmitterFloatParam, InEmitterName) == 0x000000, "Member 'NiagaraComponent_SetKuroNiagaraEmitterFloatParam::InEmitterName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetKuroNiagaraEmitterFloatParam, InVariableName) == 0x000010, "Member 'NiagaraComponent_SetKuroNiagaraEmitterFloatParam::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetKuroNiagaraEmitterFloatParam, Value) == 0x000020, "Member 'NiagaraComponent_SetKuroNiagaraEmitterFloatParam::Value' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetKuroNiagaraEmitterVectorParam
// 0x0030 (0x0030 - 0x0000)
struct NiagaraComponent_SetKuroNiagaraEmitterVectorParam final
{
public:
	class FString                                 InEmitterName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InVariableName;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               InVector;                                          // 0x0020(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetKuroNiagaraEmitterVectorParam) == 0x000010, "Wrong alignment on NiagaraComponent_SetKuroNiagaraEmitterVectorParam");
static_assert(sizeof(NiagaraComponent_SetKuroNiagaraEmitterVectorParam) == 0x000030, "Wrong size on NiagaraComponent_SetKuroNiagaraEmitterVectorParam");
static_assert(offsetof(NiagaraComponent_SetKuroNiagaraEmitterVectorParam, InEmitterName) == 0x000000, "Member 'NiagaraComponent_SetKuroNiagaraEmitterVectorParam::InEmitterName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetKuroNiagaraEmitterVectorParam, InVariableName) == 0x000010, "Member 'NiagaraComponent_SetKuroNiagaraEmitterVectorParam::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetKuroNiagaraEmitterVectorParam, InVector) == 0x000020, "Member 'NiagaraComponent_SetKuroNiagaraEmitterVectorParam::InVector' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetMaterialUseLocalTime
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_SetMaterialUseLocalTime final
{
public:
	bool                                          InUseLocalTime;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetMaterialUseLocalTime) == 0x000001, "Wrong alignment on NiagaraComponent_SetMaterialUseLocalTime");
static_assert(sizeof(NiagaraComponent_SetMaterialUseLocalTime) == 0x000001, "Wrong size on NiagaraComponent_SetMaterialUseLocalTime");
static_assert(offsetof(NiagaraComponent_SetMaterialUseLocalTime, InUseLocalTime) == 0x000000, "Member 'NiagaraComponent_SetMaterialUseLocalTime::InUseLocalTime' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetMaxSimTime
// 0x0004 (0x0004 - 0x0000)
struct NiagaraComponent_SetMaxSimTime final
{
public:
	float                                         InMaxTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetMaxSimTime) == 0x000004, "Wrong alignment on NiagaraComponent_SetMaxSimTime");
static_assert(sizeof(NiagaraComponent_SetMaxSimTime) == 0x000004, "Wrong size on NiagaraComponent_SetMaxSimTime");
static_assert(offsetof(NiagaraComponent_SetMaxSimTime, InMaxTime) == 0x000000, "Member 'NiagaraComponent_SetMaxSimTime::InMaxTime' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetNiagaraVariableActor
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetNiagaraVariableActor final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetNiagaraVariableActor) == 0x000008, "Wrong alignment on NiagaraComponent_SetNiagaraVariableActor");
static_assert(sizeof(NiagaraComponent_SetNiagaraVariableActor) == 0x000018, "Wrong size on NiagaraComponent_SetNiagaraVariableActor");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableActor, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetNiagaraVariableActor::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableActor, Actor) == 0x000010, "Member 'NiagaraComponent_SetNiagaraVariableActor::Actor' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetNiagaraVariableBool
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetNiagaraVariableBool final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraComponent_SetNiagaraVariableBool) == 0x000008, "Wrong alignment on NiagaraComponent_SetNiagaraVariableBool");
static_assert(sizeof(NiagaraComponent_SetNiagaraVariableBool) == 0x000018, "Wrong size on NiagaraComponent_SetNiagaraVariableBool");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableBool, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetNiagaraVariableBool::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableBool, InValue) == 0x000010, "Member 'NiagaraComponent_SetNiagaraVariableBool::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetNiagaraVariableFloat
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetNiagaraVariableFloat final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InValue;                                           // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraComponent_SetNiagaraVariableFloat) == 0x000008, "Wrong alignment on NiagaraComponent_SetNiagaraVariableFloat");
static_assert(sizeof(NiagaraComponent_SetNiagaraVariableFloat) == 0x000018, "Wrong size on NiagaraComponent_SetNiagaraVariableFloat");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableFloat, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetNiagaraVariableFloat::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableFloat, InValue) == 0x000010, "Member 'NiagaraComponent_SetNiagaraVariableFloat::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetNiagaraVariableInt
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetNiagaraVariableInt final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InValue;                                           // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraComponent_SetNiagaraVariableInt) == 0x000008, "Wrong alignment on NiagaraComponent_SetNiagaraVariableInt");
static_assert(sizeof(NiagaraComponent_SetNiagaraVariableInt) == 0x000018, "Wrong size on NiagaraComponent_SetNiagaraVariableInt");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableInt, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetNiagaraVariableInt::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableInt, InValue) == 0x000010, "Member 'NiagaraComponent_SetNiagaraVariableInt::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetNiagaraVariableLinearColor
// 0x0020 (0x0020 - 0x0000)
struct NiagaraComponent_SetNiagaraVariableLinearColor final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           InValue;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetNiagaraVariableLinearColor) == 0x000008, "Wrong alignment on NiagaraComponent_SetNiagaraVariableLinearColor");
static_assert(sizeof(NiagaraComponent_SetNiagaraVariableLinearColor) == 0x000020, "Wrong size on NiagaraComponent_SetNiagaraVariableLinearColor");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableLinearColor, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetNiagaraVariableLinearColor::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableLinearColor, InValue) == 0x000010, "Member 'NiagaraComponent_SetNiagaraVariableLinearColor::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetNiagaraVariableObject
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetNiagaraVariableObject final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Object;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetNiagaraVariableObject) == 0x000008, "Wrong alignment on NiagaraComponent_SetNiagaraVariableObject");
static_assert(sizeof(NiagaraComponent_SetNiagaraVariableObject) == 0x000018, "Wrong size on NiagaraComponent_SetNiagaraVariableObject");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableObject, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetNiagaraVariableObject::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableObject, Object) == 0x000010, "Member 'NiagaraComponent_SetNiagaraVariableObject::Object' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetNiagaraVariableQuat
// 0x0020 (0x0020 - 0x0000)
struct NiagaraComponent_SetNiagaraVariableQuat final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  InValue;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetNiagaraVariableQuat) == 0x000010, "Wrong alignment on NiagaraComponent_SetNiagaraVariableQuat");
static_assert(sizeof(NiagaraComponent_SetNiagaraVariableQuat) == 0x000020, "Wrong size on NiagaraComponent_SetNiagaraVariableQuat");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableQuat, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetNiagaraVariableQuat::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableQuat, InValue) == 0x000010, "Member 'NiagaraComponent_SetNiagaraVariableQuat::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetNiagaraVariableVec2
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetNiagaraVariableVec2 final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              InValue;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetNiagaraVariableVec2) == 0x000008, "Wrong alignment on NiagaraComponent_SetNiagaraVariableVec2");
static_assert(sizeof(NiagaraComponent_SetNiagaraVariableVec2) == 0x000018, "Wrong size on NiagaraComponent_SetNiagaraVariableVec2");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableVec2, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetNiagaraVariableVec2::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableVec2, InValue) == 0x000010, "Member 'NiagaraComponent_SetNiagaraVariableVec2::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetNiagaraVariableVec3
// 0x0020 (0x0020 - 0x0000)
struct NiagaraComponent_SetNiagaraVariableVec3 final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InValue;                                           // 0x0010(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraComponent_SetNiagaraVariableVec3) == 0x000008, "Wrong alignment on NiagaraComponent_SetNiagaraVariableVec3");
static_assert(sizeof(NiagaraComponent_SetNiagaraVariableVec3) == 0x000020, "Wrong size on NiagaraComponent_SetNiagaraVariableVec3");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableVec3, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetNiagaraVariableVec3::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableVec3, InValue) == 0x000010, "Member 'NiagaraComponent_SetNiagaraVariableVec3::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetNiagaraVariableVec4
// 0x0020 (0x0020 - 0x0000)
struct NiagaraComponent_SetNiagaraVariableVec4 final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               InValue;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetNiagaraVariableVec4) == 0x000010, "Wrong alignment on NiagaraComponent_SetNiagaraVariableVec4");
static_assert(sizeof(NiagaraComponent_SetNiagaraVariableVec4) == 0x000020, "Wrong size on NiagaraComponent_SetNiagaraVariableVec4");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableVec4, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetNiagaraVariableVec4::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetNiagaraVariableVec4, InValue) == 0x000010, "Member 'NiagaraComponent_SetNiagaraVariableVec4::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetPaused
// 0x0002 (0x0002 - 0x0000)
struct NiagaraComponent_SetPaused final
{
public:
	bool                                          bInPaused;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNotify;                                           // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetPaused) == 0x000001, "Wrong alignment on NiagaraComponent_SetPaused");
static_assert(sizeof(NiagaraComponent_SetPaused) == 0x000002, "Wrong size on NiagaraComponent_SetPaused");
static_assert(offsetof(NiagaraComponent_SetPaused, bInPaused) == 0x000000, "Member 'NiagaraComponent_SetPaused::bInPaused' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetPaused, bNotify) == 0x000001, "Member 'NiagaraComponent_SetPaused::bNotify' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetPreviewLODDistance
// 0x0008 (0x0008 - 0x0000)
struct NiagaraComponent_SetPreviewLODDistance final
{
public:
	bool                                          bEnablePreviewLODDistance;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PreviewLODDistance;                                // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetPreviewLODDistance) == 0x000004, "Wrong alignment on NiagaraComponent_SetPreviewLODDistance");
static_assert(sizeof(NiagaraComponent_SetPreviewLODDistance) == 0x000008, "Wrong size on NiagaraComponent_SetPreviewLODDistance");
static_assert(offsetof(NiagaraComponent_SetPreviewLODDistance, bEnablePreviewLODDistance) == 0x000000, "Member 'NiagaraComponent_SetPreviewLODDistance::bEnablePreviewLODDistance' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetPreviewLODDistance, PreviewLODDistance) == 0x000004, "Member 'NiagaraComponent_SetPreviewLODDistance::PreviewLODDistance' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetRenderingEnabled
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_SetRenderingEnabled final
{
public:
	bool                                          bInRenderingEnabled;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetRenderingEnabled) == 0x000001, "Wrong alignment on NiagaraComponent_SetRenderingEnabled");
static_assert(sizeof(NiagaraComponent_SetRenderingEnabled) == 0x000001, "Wrong size on NiagaraComponent_SetRenderingEnabled");
static_assert(offsetof(NiagaraComponent_SetRenderingEnabled, bInRenderingEnabled) == 0x000000, "Member 'NiagaraComponent_SetRenderingEnabled::bInRenderingEnabled' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetRuntimeEffectType
// 0x0008 (0x0008 - 0x0000)
struct NiagaraComponent_SetRuntimeEffectType final
{
public:
	class UNiagaraEffectType*                     EffectType;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetRuntimeEffectType) == 0x000008, "Wrong alignment on NiagaraComponent_SetRuntimeEffectType");
static_assert(sizeof(NiagaraComponent_SetRuntimeEffectType) == 0x000008, "Wrong size on NiagaraComponent_SetRuntimeEffectType");
static_assert(offsetof(NiagaraComponent_SetRuntimeEffectType, EffectType) == 0x000000, "Member 'NiagaraComponent_SetRuntimeEffectType::EffectType' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetSeekDelta
// 0x0004 (0x0004 - 0x0000)
struct NiagaraComponent_SetSeekDelta final
{
public:
	float                                         InSeekDelta;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetSeekDelta) == 0x000004, "Wrong alignment on NiagaraComponent_SetSeekDelta");
static_assert(sizeof(NiagaraComponent_SetSeekDelta) == 0x000004, "Wrong size on NiagaraComponent_SetSeekDelta");
static_assert(offsetof(NiagaraComponent_SetSeekDelta, InSeekDelta) == 0x000000, "Member 'NiagaraComponent_SetSeekDelta::InSeekDelta' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetTickBehavior
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_SetTickBehavior final
{
public:
	ENiagaraTickBehavior                          NewTickBehavior;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetTickBehavior) == 0x000001, "Wrong alignment on NiagaraComponent_SetTickBehavior");
static_assert(sizeof(NiagaraComponent_SetTickBehavior) == 0x000001, "Wrong size on NiagaraComponent_SetTickBehavior");
static_assert(offsetof(NiagaraComponent_SetTickBehavior, NewTickBehavior) == 0x000000, "Member 'NiagaraComponent_SetTickBehavior::NewTickBehavior' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetTickTimeDilation
// 0x0004 (0x0004 - 0x0000)
struct NiagaraComponent_SetTickTimeDilation final
{
public:
	float                                         InTimeDilation;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetTickTimeDilation) == 0x000004, "Wrong alignment on NiagaraComponent_SetTickTimeDilation");
static_assert(sizeof(NiagaraComponent_SetTickTimeDilation) == 0x000004, "Wrong size on NiagaraComponent_SetTickTimeDilation");
static_assert(offsetof(NiagaraComponent_SetTickTimeDilation, InTimeDilation) == 0x000000, "Member 'NiagaraComponent_SetTickTimeDilation::InTimeDilation' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVariableActor
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetVariableActor final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetVariableActor) == 0x000008, "Wrong alignment on NiagaraComponent_SetVariableActor");
static_assert(sizeof(NiagaraComponent_SetVariableActor) == 0x000018, "Wrong size on NiagaraComponent_SetVariableActor");
static_assert(offsetof(NiagaraComponent_SetVariableActor, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetVariableActor::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetVariableActor, Actor) == 0x000010, "Member 'NiagaraComponent_SetVariableActor::Actor' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVariableBool
// 0x0010 (0x0010 - 0x0000)
struct NiagaraComponent_SetVariableBool final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraComponent_SetVariableBool) == 0x000004, "Wrong alignment on NiagaraComponent_SetVariableBool");
static_assert(sizeof(NiagaraComponent_SetVariableBool) == 0x000010, "Wrong size on NiagaraComponent_SetVariableBool");
static_assert(offsetof(NiagaraComponent_SetVariableBool, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetVariableBool::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetVariableBool, InValue) == 0x00000C, "Member 'NiagaraComponent_SetVariableBool::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVariableFloat
// 0x0010 (0x0010 - 0x0000)
struct NiagaraComponent_SetVariableFloat final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InValue;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetVariableFloat) == 0x000004, "Wrong alignment on NiagaraComponent_SetVariableFloat");
static_assert(sizeof(NiagaraComponent_SetVariableFloat) == 0x000010, "Wrong size on NiagaraComponent_SetVariableFloat");
static_assert(offsetof(NiagaraComponent_SetVariableFloat, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetVariableFloat::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetVariableFloat, InValue) == 0x00000C, "Member 'NiagaraComponent_SetVariableFloat::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVariableInt
// 0x0010 (0x0010 - 0x0000)
struct NiagaraComponent_SetVariableInt final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InValue;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetVariableInt) == 0x000004, "Wrong alignment on NiagaraComponent_SetVariableInt");
static_assert(sizeof(NiagaraComponent_SetVariableInt) == 0x000010, "Wrong size on NiagaraComponent_SetVariableInt");
static_assert(offsetof(NiagaraComponent_SetVariableInt, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetVariableInt::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetVariableInt, InValue) == 0x00000C, "Member 'NiagaraComponent_SetVariableInt::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVariableLinearColor
// 0x001C (0x001C - 0x0000)
struct NiagaraComponent_SetVariableLinearColor final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           InValue;                                           // 0x000C(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetVariableLinearColor) == 0x000004, "Wrong alignment on NiagaraComponent_SetVariableLinearColor");
static_assert(sizeof(NiagaraComponent_SetVariableLinearColor) == 0x00001C, "Wrong size on NiagaraComponent_SetVariableLinearColor");
static_assert(offsetof(NiagaraComponent_SetVariableLinearColor, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetVariableLinearColor::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetVariableLinearColor, InValue) == 0x00000C, "Member 'NiagaraComponent_SetVariableLinearColor::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVariableMaterial
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetVariableMaterial final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Object;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetVariableMaterial) == 0x000008, "Wrong alignment on NiagaraComponent_SetVariableMaterial");
static_assert(sizeof(NiagaraComponent_SetVariableMaterial) == 0x000018, "Wrong size on NiagaraComponent_SetVariableMaterial");
static_assert(offsetof(NiagaraComponent_SetVariableMaterial, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetVariableMaterial::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetVariableMaterial, Object) == 0x000010, "Member 'NiagaraComponent_SetVariableMaterial::Object' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVariableObject
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetVariableObject final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetVariableObject) == 0x000008, "Wrong alignment on NiagaraComponent_SetVariableObject");
static_assert(sizeof(NiagaraComponent_SetVariableObject) == 0x000018, "Wrong size on NiagaraComponent_SetVariableObject");
static_assert(offsetof(NiagaraComponent_SetVariableObject, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetVariableObject::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetVariableObject, Object) == 0x000010, "Member 'NiagaraComponent_SetVariableObject::Object' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVariableQuat
// 0x0020 (0x0020 - 0x0000)
struct NiagaraComponent_SetVariableQuat final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  InValue;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetVariableQuat) == 0x000010, "Wrong alignment on NiagaraComponent_SetVariableQuat");
static_assert(sizeof(NiagaraComponent_SetVariableQuat) == 0x000020, "Wrong size on NiagaraComponent_SetVariableQuat");
static_assert(offsetof(NiagaraComponent_SetVariableQuat, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetVariableQuat::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetVariableQuat, InValue) == 0x000010, "Member 'NiagaraComponent_SetVariableQuat::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVariableTextureRenderTarget
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetVariableTextureRenderTarget final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget*                   TextureRenderTarget;                               // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetVariableTextureRenderTarget) == 0x000008, "Wrong alignment on NiagaraComponent_SetVariableTextureRenderTarget");
static_assert(sizeof(NiagaraComponent_SetVariableTextureRenderTarget) == 0x000018, "Wrong size on NiagaraComponent_SetVariableTextureRenderTarget");
static_assert(offsetof(NiagaraComponent_SetVariableTextureRenderTarget, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetVariableTextureRenderTarget::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetVariableTextureRenderTarget, TextureRenderTarget) == 0x000010, "Member 'NiagaraComponent_SetVariableTextureRenderTarget::TextureRenderTarget' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVariableVec2
// 0x0014 (0x0014 - 0x0000)
struct NiagaraComponent_SetVariableVec2 final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              InValue;                                           // 0x000C(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetVariableVec2) == 0x000004, "Wrong alignment on NiagaraComponent_SetVariableVec2");
static_assert(sizeof(NiagaraComponent_SetVariableVec2) == 0x000014, "Wrong size on NiagaraComponent_SetVariableVec2");
static_assert(offsetof(NiagaraComponent_SetVariableVec2, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetVariableVec2::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetVariableVec2, InValue) == 0x00000C, "Member 'NiagaraComponent_SetVariableVec2::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVariableVec3
// 0x0018 (0x0018 - 0x0000)
struct NiagaraComponent_SetVariableVec3 final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InValue;                                           // 0x000C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetVariableVec3) == 0x000004, "Wrong alignment on NiagaraComponent_SetVariableVec3");
static_assert(sizeof(NiagaraComponent_SetVariableVec3) == 0x000018, "Wrong size on NiagaraComponent_SetVariableVec3");
static_assert(offsetof(NiagaraComponent_SetVariableVec3, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetVariableVec3::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetVariableVec3, InValue) == 0x00000C, "Member 'NiagaraComponent_SetVariableVec3::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVariableVec4
// 0x0020 (0x0020 - 0x0000)
struct NiagaraComponent_SetVariableVec4 final
{
public:
	class FName                                   InVariableName;                                    // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               InValue;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetVariableVec4) == 0x000010, "Wrong alignment on NiagaraComponent_SetVariableVec4");
static_assert(sizeof(NiagaraComponent_SetVariableVec4) == 0x000020, "Wrong size on NiagaraComponent_SetVariableVec4");
static_assert(offsetof(NiagaraComponent_SetVariableVec4, InVariableName) == 0x000000, "Member 'NiagaraComponent_SetVariableVec4::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraComponent_SetVariableVec4, InValue) == 0x000010, "Member 'NiagaraComponent_SetVariableVec4::InValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.SetVisibleInRayTracing
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_SetVisibleInRayTracing final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_SetVisibleInRayTracing) == 0x000001, "Wrong alignment on NiagaraComponent_SetVisibleInRayTracing");
static_assert(sizeof(NiagaraComponent_SetVisibleInRayTracing) == 0x000001, "Wrong size on NiagaraComponent_SetVisibleInRayTracing");
static_assert(offsetof(NiagaraComponent_SetVisibleInRayTracing, NewValue) == 0x000000, "Member 'NiagaraComponent_SetVisibleInRayTracing::NewValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetAgeUpdateMode
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_GetAgeUpdateMode final
{
public:
	ENiagaraAgeUpdateMode                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetAgeUpdateMode) == 0x000001, "Wrong alignment on NiagaraComponent_GetAgeUpdateMode");
static_assert(sizeof(NiagaraComponent_GetAgeUpdateMode) == 0x000001, "Wrong size on NiagaraComponent_GetAgeUpdateMode");
static_assert(offsetof(NiagaraComponent_GetAgeUpdateMode, ReturnValue) == 0x000000, "Member 'NiagaraComponent_GetAgeUpdateMode::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetAsset
// 0x0008 (0x0008 - 0x0000)
struct NiagaraComponent_GetAsset final
{
public:
	class UNiagaraSystem*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetAsset) == 0x000008, "Wrong alignment on NiagaraComponent_GetAsset");
static_assert(sizeof(NiagaraComponent_GetAsset) == 0x000008, "Wrong size on NiagaraComponent_GetAsset");
static_assert(offsetof(NiagaraComponent_GetAsset, ReturnValue) == 0x000000, "Member 'NiagaraComponent_GetAsset::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetDesiredAge
// 0x0004 (0x0004 - 0x0000)
struct NiagaraComponent_GetDesiredAge final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetDesiredAge) == 0x000004, "Wrong alignment on NiagaraComponent_GetDesiredAge");
static_assert(sizeof(NiagaraComponent_GetDesiredAge) == 0x000004, "Wrong size on NiagaraComponent_GetDesiredAge");
static_assert(offsetof(NiagaraComponent_GetDesiredAge, ReturnValue) == 0x000000, "Member 'NiagaraComponent_GetDesiredAge::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetForceSolo
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_GetForceSolo final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetForceSolo) == 0x000001, "Wrong alignment on NiagaraComponent_GetForceSolo");
static_assert(sizeof(NiagaraComponent_GetForceSolo) == 0x000001, "Wrong size on NiagaraComponent_GetForceSolo");
static_assert(offsetof(NiagaraComponent_GetForceSolo, ReturnValue) == 0x000000, "Member 'NiagaraComponent_GetForceSolo::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetMaxSimTime
// 0x0004 (0x0004 - 0x0000)
struct NiagaraComponent_GetMaxSimTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetMaxSimTime) == 0x000004, "Wrong alignment on NiagaraComponent_GetMaxSimTime");
static_assert(sizeof(NiagaraComponent_GetMaxSimTime) == 0x000004, "Wrong size on NiagaraComponent_GetMaxSimTime");
static_assert(offsetof(NiagaraComponent_GetMaxSimTime, ReturnValue) == 0x000000, "Member 'NiagaraComponent_GetMaxSimTime::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetPreviewLODDistance
// 0x0004 (0x0004 - 0x0000)
struct NiagaraComponent_GetPreviewLODDistance final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetPreviewLODDistance) == 0x000004, "Wrong alignment on NiagaraComponent_GetPreviewLODDistance");
static_assert(sizeof(NiagaraComponent_GetPreviewLODDistance) == 0x000004, "Wrong size on NiagaraComponent_GetPreviewLODDistance");
static_assert(offsetof(NiagaraComponent_GetPreviewLODDistance, ReturnValue) == 0x000000, "Member 'NiagaraComponent_GetPreviewLODDistance::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetPreviewLODDistanceEnabled
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_GetPreviewLODDistanceEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetPreviewLODDistanceEnabled) == 0x000001, "Wrong alignment on NiagaraComponent_GetPreviewLODDistanceEnabled");
static_assert(sizeof(NiagaraComponent_GetPreviewLODDistanceEnabled) == 0x000001, "Wrong size on NiagaraComponent_GetPreviewLODDistanceEnabled");
static_assert(offsetof(NiagaraComponent_GetPreviewLODDistanceEnabled, ReturnValue) == 0x000000, "Member 'NiagaraComponent_GetPreviewLODDistanceEnabled::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetSeekDelta
// 0x0004 (0x0004 - 0x0000)
struct NiagaraComponent_GetSeekDelta final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetSeekDelta) == 0x000004, "Wrong alignment on NiagaraComponent_GetSeekDelta");
static_assert(sizeof(NiagaraComponent_GetSeekDelta) == 0x000004, "Wrong size on NiagaraComponent_GetSeekDelta");
static_assert(offsetof(NiagaraComponent_GetSeekDelta, ReturnValue) == 0x000000, "Member 'NiagaraComponent_GetSeekDelta::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.GetTickBehavior
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_GetTickBehavior final
{
public:
	ENiagaraTickBehavior                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_GetTickBehavior) == 0x000001, "Wrong alignment on NiagaraComponent_GetTickBehavior");
static_assert(sizeof(NiagaraComponent_GetTickBehavior) == 0x000001, "Wrong size on NiagaraComponent_GetTickBehavior");
static_assert(offsetof(NiagaraComponent_GetTickBehavior, ReturnValue) == 0x000000, "Member 'NiagaraComponent_GetTickBehavior::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraComponent.IsPaused
// 0x0001 (0x0001 - 0x0000)
struct NiagaraComponent_IsPaused final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraComponent_IsPaused) == 0x000001, "Wrong alignment on NiagaraComponent_IsPaused");
static_assert(sizeof(NiagaraComponent_IsPaused) == 0x000001, "Wrong size on NiagaraComponent_IsPaused");
static_assert(offsetof(NiagaraComponent_IsPaused, ReturnValue) == 0x000000, "Member 'NiagaraComponent_IsPaused::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraParticleCallbackHandler.ReceiveParticleData
// 0x0018 (0x0018 - 0x0000)
struct NiagaraParticleCallbackHandler_ReceiveParticleData final
{
public:
	TArray<struct FBasicParticleData>             Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraParticleCallbackHandler_ReceiveParticleData) == 0x000008, "Wrong alignment on NiagaraParticleCallbackHandler_ReceiveParticleData");
static_assert(sizeof(NiagaraParticleCallbackHandler_ReceiveParticleData) == 0x000018, "Wrong size on NiagaraParticleCallbackHandler_ReceiveParticleData");
static_assert(offsetof(NiagaraParticleCallbackHandler_ReceiveParticleData, Data) == 0x000000, "Member 'NiagaraParticleCallbackHandler_ReceiveParticleData::Data' has a wrong offset!");
static_assert(offsetof(NiagaraParticleCallbackHandler_ReceiveParticleData, NiagaraSystem) == 0x000010, "Member 'NiagaraParticleCallbackHandler_ReceiveParticleData::NiagaraSystem' has a wrong offset!");

// Function Niagara.NiagaraActor.OnNiagaraSystemFinished
// 0x0008 (0x0008 - 0x0000)
struct NiagaraActor_OnNiagaraSystemFinished final
{
public:
	class UNiagaraComponent*                      FinishedComponent;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraActor_OnNiagaraSystemFinished) == 0x000008, "Wrong alignment on NiagaraActor_OnNiagaraSystemFinished");
static_assert(sizeof(NiagaraActor_OnNiagaraSystemFinished) == 0x000008, "Wrong size on NiagaraActor_OnNiagaraSystemFinished");
static_assert(offsetof(NiagaraActor_OnNiagaraSystemFinished, FinishedComponent) == 0x000000, "Member 'NiagaraActor_OnNiagaraSystemFinished::FinishedComponent' has a wrong offset!");

// Function Niagara.NiagaraActor.SetDestroyOnSystemFinish
// 0x0001 (0x0001 - 0x0000)
struct NiagaraActor_SetDestroyOnSystemFinish final
{
public:
	bool                                          bShouldDestroyOnSystemFinish;                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraActor_SetDestroyOnSystemFinish) == 0x000001, "Wrong alignment on NiagaraActor_SetDestroyOnSystemFinish");
static_assert(sizeof(NiagaraActor_SetDestroyOnSystemFinish) == 0x000001, "Wrong size on NiagaraActor_SetDestroyOnSystemFinish");
static_assert(offsetof(NiagaraActor_SetDestroyOnSystemFinish, bShouldDestroyOnSystemFinish) == 0x000000, "Member 'NiagaraActor_SetDestroyOnSystemFinish::bShouldDestroyOnSystemFinish' has a wrong offset!");

// Function Niagara.NiagaraDataChannelLibrary.GetDataChannelElementCount
// 0x0030 (0x0030 - 0x0000)
struct NiagaraDataChannelLibrary_GetDataChannelElementCount final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UNiagaraDataChannelAsset*         Channel;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraDataChannelSearchParameters    SearchParams;                                      // 0x0010(0x0018)(Parm, NoDestructor, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bReadPreviousFrame;                                // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelLibrary_GetDataChannelElementCount) == 0x000008, "Wrong alignment on NiagaraDataChannelLibrary_GetDataChannelElementCount");
static_assert(sizeof(NiagaraDataChannelLibrary_GetDataChannelElementCount) == 0x000030, "Wrong size on NiagaraDataChannelLibrary_GetDataChannelElementCount");
static_assert(offsetof(NiagaraDataChannelLibrary_GetDataChannelElementCount, WorldContextObject) == 0x000000, "Member 'NiagaraDataChannelLibrary_GetDataChannelElementCount::WorldContextObject' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_GetDataChannelElementCount, Channel) == 0x000008, "Member 'NiagaraDataChannelLibrary_GetDataChannelElementCount::Channel' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_GetDataChannelElementCount, SearchParams) == 0x000010, "Member 'NiagaraDataChannelLibrary_GetDataChannelElementCount::SearchParams' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_GetDataChannelElementCount, bReadPreviousFrame) == 0x000028, "Member 'NiagaraDataChannelLibrary_GetDataChannelElementCount::bReadPreviousFrame' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_GetDataChannelElementCount, ReturnValue) == 0x00002C, "Member 'NiagaraDataChannelLibrary_GetDataChannelElementCount::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelLibrary.GetNiagaraDataChannel
// 0x0018 (0x0018 - 0x0000)
struct NiagaraDataChannelLibrary_GetNiagaraDataChannel final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UNiagaraDataChannelAsset*         Channel;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraDataChannelHandler*             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelLibrary_GetNiagaraDataChannel) == 0x000008, "Wrong alignment on NiagaraDataChannelLibrary_GetNiagaraDataChannel");
static_assert(sizeof(NiagaraDataChannelLibrary_GetNiagaraDataChannel) == 0x000018, "Wrong size on NiagaraDataChannelLibrary_GetNiagaraDataChannel");
static_assert(offsetof(NiagaraDataChannelLibrary_GetNiagaraDataChannel, WorldContextObject) == 0x000000, "Member 'NiagaraDataChannelLibrary_GetNiagaraDataChannel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_GetNiagaraDataChannel, Channel) == 0x000008, "Member 'NiagaraDataChannelLibrary_GetNiagaraDataChannel::Channel' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_GetNiagaraDataChannel, ReturnValue) == 0x000010, "Member 'NiagaraDataChannelLibrary_GetNiagaraDataChannel::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelLibrary.ReadFromNiagaraDataChannel
// 0x0038 (0x0038 - 0x0000)
struct NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UNiagaraDataChannelAsset*         Channel;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraDataChannelSearchParameters    SearchParams;                                      // 0x0010(0x0018)(Parm, NoDestructor, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bReadPreviousFrame;                                // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraDataChannelReader*              ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel) == 0x000008, "Wrong alignment on NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel");
static_assert(sizeof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel) == 0x000038, "Wrong size on NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel");
static_assert(offsetof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel, WorldContextObject) == 0x000000, "Member 'NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel, Channel) == 0x000008, "Member 'NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel::Channel' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel, SearchParams) == 0x000010, "Member 'NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel::SearchParams' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel, bReadPreviousFrame) == 0x000028, "Member 'NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel::bReadPreviousFrame' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel, ReturnValue) == 0x000030, "Member 'NiagaraDataChannelLibrary_ReadFromNiagaraDataChannel::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelLibrary.ReadFromNiagaraDataChannelSingle
// 0x0038 (0x0038 - 0x0000)
struct NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UNiagaraDataChannelAsset*         Channel;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNiagaraDataChannelSearchParameters    SearchParams;                                      // 0x0018(0x0018)(Parm, NoDestructor, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bReadPreviousFrame;                                // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENiagartaDataChannelReadResult                ReadResult;                                        // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle) == 0x000008, "Wrong alignment on NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle");
static_assert(sizeof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle) == 0x000038, "Wrong size on NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle");
static_assert(offsetof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle, WorldContextObject) == 0x000000, "Member 'NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle::WorldContextObject' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle, Channel) == 0x000008, "Member 'NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle::Channel' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle, Index_0) == 0x000010, "Member 'NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle, SearchParams) == 0x000018, "Member 'NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle::SearchParams' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle, bReadPreviousFrame) == 0x000030, "Member 'NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle::bReadPreviousFrame' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle, ReadResult) == 0x000031, "Member 'NiagaraDataChannelLibrary_ReadFromNiagaraDataChannelSingle::ReadResult' has a wrong offset!");

// Function Niagara.NiagaraDataChannelLibrary.WriteToNiagaraDataChannel
// 0x0048 (0x0048 - 0x0000)
struct NiagaraDataChannelLibrary_WriteToNiagaraDataChannel final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UNiagaraDataChannelAsset*         Channel;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraDataChannelSearchParameters    SearchParams;                                      // 0x0010(0x0018)(Parm, NoDestructor, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisibleToGame;                                    // 0x002C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisibleToCPU;                                     // 0x002D(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisibleToGPU;                                     // 0x002E(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugSource;                                       // 0x0030(0x0010)(Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraDataChannelWriter*              ReturnValue;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannel) == 0x000008, "Wrong alignment on NiagaraDataChannelLibrary_WriteToNiagaraDataChannel");
static_assert(sizeof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannel) == 0x000048, "Wrong size on NiagaraDataChannelLibrary_WriteToNiagaraDataChannel");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannel, WorldContextObject) == 0x000000, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannel, Channel) == 0x000008, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannel::Channel' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannel, SearchParams) == 0x000010, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannel::SearchParams' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannel, Count) == 0x000028, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannel::Count' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannel, bVisibleToGame) == 0x00002C, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannel::bVisibleToGame' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannel, bVisibleToCPU) == 0x00002D, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannel::bVisibleToCPU' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannel, bVisibleToGPU) == 0x00002E, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannel::bVisibleToGPU' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannel, DebugSource) == 0x000030, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannel::DebugSource' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannel, ReturnValue) == 0x000040, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannel::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelLibrary.WriteToNiagaraDataChannelSingle
// 0x0030 (0x0030 - 0x0000)
struct NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UNiagaraDataChannelAsset*         Channel;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraDataChannelSearchParameters    SearchParams;                                      // 0x0010(0x0018)(Parm, NoDestructor, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bVisibleToBlueprint;                               // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisibleToNiagaraCPU;                              // 0x0029(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisibleToNiagaraGPU;                              // 0x002A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle) == 0x000008, "Wrong alignment on NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle");
static_assert(sizeof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle) == 0x000030, "Wrong size on NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle, WorldContextObject) == 0x000000, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle::WorldContextObject' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle, Channel) == 0x000008, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle::Channel' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle, SearchParams) == 0x000010, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle::SearchParams' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle, bVisibleToBlueprint) == 0x000028, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle::bVisibleToBlueprint' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle, bVisibleToNiagaraCPU) == 0x000029, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle::bVisibleToNiagaraCPU' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle, bVisibleToNiagaraGPU) == 0x00002A, "Member 'NiagaraDataChannelLibrary_WriteToNiagaraDataChannelSingle::bVisibleToNiagaraGPU' has a wrong offset!");

// Function Niagara.NiagaraDataChannelHandler.GetDataChannelReader
// 0x0008 (0x0008 - 0x0000)
struct NiagaraDataChannelHandler_GetDataChannelReader final
{
public:
	class UNiagaraDataChannelReader*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelHandler_GetDataChannelReader) == 0x000008, "Wrong alignment on NiagaraDataChannelHandler_GetDataChannelReader");
static_assert(sizeof(NiagaraDataChannelHandler_GetDataChannelReader) == 0x000008, "Wrong size on NiagaraDataChannelHandler_GetDataChannelReader");
static_assert(offsetof(NiagaraDataChannelHandler_GetDataChannelReader, ReturnValue) == 0x000000, "Member 'NiagaraDataChannelHandler_GetDataChannelReader::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelHandler.GetDataChannelWriter
// 0x0008 (0x0008 - 0x0000)
struct NiagaraDataChannelHandler_GetDataChannelWriter final
{
public:
	class UNiagaraDataChannelWriter*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelHandler_GetDataChannelWriter) == 0x000008, "Wrong alignment on NiagaraDataChannelHandler_GetDataChannelWriter");
static_assert(sizeof(NiagaraDataChannelHandler_GetDataChannelWriter) == 0x000008, "Wrong size on NiagaraDataChannelHandler_GetDataChannelWriter");
static_assert(offsetof(NiagaraDataChannelHandler_GetDataChannelWriter, ReturnValue) == 0x000000, "Member 'NiagaraDataChannelHandler_GetDataChannelWriter::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.InitAccess
// 0x0020 (0x0020 - 0x0000)
struct NiagaraDataChannelReader_InitAccess final
{
public:
	struct FNiagaraDataChannelSearchParameters    SearchParams;                                      // 0x0000(0x0018)(Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bReadPrevFrameData;                                // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataChannelReader_InitAccess) == 0x000008, "Wrong alignment on NiagaraDataChannelReader_InitAccess");
static_assert(sizeof(NiagaraDataChannelReader_InitAccess) == 0x000020, "Wrong size on NiagaraDataChannelReader_InitAccess");
static_assert(offsetof(NiagaraDataChannelReader_InitAccess, SearchParams) == 0x000000, "Member 'NiagaraDataChannelReader_InitAccess::SearchParams' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_InitAccess, bReadPrevFrameData) == 0x000018, "Member 'NiagaraDataChannelReader_InitAccess::bReadPrevFrameData' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_InitAccess, ReturnValue) == 0x000019, "Member 'NiagaraDataChannelReader_InitAccess::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.Num
// 0x0004 (0x0004 - 0x0000)
struct NiagaraDataChannelReader_Num final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelReader_Num) == 0x000004, "Wrong alignment on NiagaraDataChannelReader_Num");
static_assert(sizeof(NiagaraDataChannelReader_Num) == 0x000004, "Wrong size on NiagaraDataChannelReader_Num");
static_assert(offsetof(NiagaraDataChannelReader_Num, ReturnValue) == 0x000000, "Member 'NiagaraDataChannelReader_Num::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.ReadBool
// 0x0014 (0x0014 - 0x0000)
struct NiagaraDataChannelReader_ReadBool final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataChannelReader_ReadBool) == 0x000004, "Wrong alignment on NiagaraDataChannelReader_ReadBool");
static_assert(sizeof(NiagaraDataChannelReader_ReadBool) == 0x000014, "Wrong size on NiagaraDataChannelReader_ReadBool");
static_assert(offsetof(NiagaraDataChannelReader_ReadBool, VarName) == 0x000000, "Member 'NiagaraDataChannelReader_ReadBool::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadBool, Index_0) == 0x00000C, "Member 'NiagaraDataChannelReader_ReadBool::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadBool, IsValid) == 0x000010, "Member 'NiagaraDataChannelReader_ReadBool::IsValid' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadBool, ReturnValue) == 0x000011, "Member 'NiagaraDataChannelReader_ReadBool::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.ReadEnum
// 0x0014 (0x0014 - 0x0000)
struct NiagaraDataChannelReader_ReadEnum final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataChannelReader_ReadEnum) == 0x000004, "Wrong alignment on NiagaraDataChannelReader_ReadEnum");
static_assert(sizeof(NiagaraDataChannelReader_ReadEnum) == 0x000014, "Wrong size on NiagaraDataChannelReader_ReadEnum");
static_assert(offsetof(NiagaraDataChannelReader_ReadEnum, VarName) == 0x000000, "Member 'NiagaraDataChannelReader_ReadEnum::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadEnum, Index_0) == 0x00000C, "Member 'NiagaraDataChannelReader_ReadEnum::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadEnum, IsValid) == 0x000010, "Member 'NiagaraDataChannelReader_ReadEnum::IsValid' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadEnum, ReturnValue) == 0x000011, "Member 'NiagaraDataChannelReader_ReadEnum::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.ReadFloat
// 0x0020 (0x0020 - 0x0000)
struct NiagaraDataChannelReader_ReadFloat final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelReader_ReadFloat) == 0x000008, "Wrong alignment on NiagaraDataChannelReader_ReadFloat");
static_assert(sizeof(NiagaraDataChannelReader_ReadFloat) == 0x000020, "Wrong size on NiagaraDataChannelReader_ReadFloat");
static_assert(offsetof(NiagaraDataChannelReader_ReadFloat, VarName) == 0x000000, "Member 'NiagaraDataChannelReader_ReadFloat::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadFloat, Index_0) == 0x00000C, "Member 'NiagaraDataChannelReader_ReadFloat::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadFloat, IsValid) == 0x000010, "Member 'NiagaraDataChannelReader_ReadFloat::IsValid' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadFloat, ReturnValue) == 0x000018, "Member 'NiagaraDataChannelReader_ReadFloat::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.ReadID
// 0x001C (0x001C - 0x0000)
struct NiagaraDataChannelReader_ReadID final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNiagaraID                             ReturnValue;                                       // 0x0014(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelReader_ReadID) == 0x000004, "Wrong alignment on NiagaraDataChannelReader_ReadID");
static_assert(sizeof(NiagaraDataChannelReader_ReadID) == 0x00001C, "Wrong size on NiagaraDataChannelReader_ReadID");
static_assert(offsetof(NiagaraDataChannelReader_ReadID, VarName) == 0x000000, "Member 'NiagaraDataChannelReader_ReadID::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadID, Index_0) == 0x00000C, "Member 'NiagaraDataChannelReader_ReadID::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadID, IsValid) == 0x000010, "Member 'NiagaraDataChannelReader_ReadID::IsValid' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadID, ReturnValue) == 0x000014, "Member 'NiagaraDataChannelReader_ReadID::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.ReadInt
// 0x0018 (0x0018 - 0x0000)
struct NiagaraDataChannelReader_ReadInt final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelReader_ReadInt) == 0x000004, "Wrong alignment on NiagaraDataChannelReader_ReadInt");
static_assert(sizeof(NiagaraDataChannelReader_ReadInt) == 0x000018, "Wrong size on NiagaraDataChannelReader_ReadInt");
static_assert(offsetof(NiagaraDataChannelReader_ReadInt, VarName) == 0x000000, "Member 'NiagaraDataChannelReader_ReadInt::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadInt, Index_0) == 0x00000C, "Member 'NiagaraDataChannelReader_ReadInt::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadInt, IsValid) == 0x000010, "Member 'NiagaraDataChannelReader_ReadInt::IsValid' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadInt, ReturnValue) == 0x000014, "Member 'NiagaraDataChannelReader_ReadInt::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.ReadLinearColor
// 0x0024 (0x0024 - 0x0000)
struct NiagaraDataChannelReader_ReadLinearColor final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ReturnValue;                                       // 0x0014(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelReader_ReadLinearColor) == 0x000004, "Wrong alignment on NiagaraDataChannelReader_ReadLinearColor");
static_assert(sizeof(NiagaraDataChannelReader_ReadLinearColor) == 0x000024, "Wrong size on NiagaraDataChannelReader_ReadLinearColor");
static_assert(offsetof(NiagaraDataChannelReader_ReadLinearColor, VarName) == 0x000000, "Member 'NiagaraDataChannelReader_ReadLinearColor::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadLinearColor, Index_0) == 0x00000C, "Member 'NiagaraDataChannelReader_ReadLinearColor::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadLinearColor, IsValid) == 0x000010, "Member 'NiagaraDataChannelReader_ReadLinearColor::IsValid' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadLinearColor, ReturnValue) == 0x000014, "Member 'NiagaraDataChannelReader_ReadLinearColor::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.ReadPosition
// 0x0020 (0x0020 - 0x0000)
struct NiagaraDataChannelReader_ReadPosition final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelReader_ReadPosition) == 0x000004, "Wrong alignment on NiagaraDataChannelReader_ReadPosition");
static_assert(sizeof(NiagaraDataChannelReader_ReadPosition) == 0x000020, "Wrong size on NiagaraDataChannelReader_ReadPosition");
static_assert(offsetof(NiagaraDataChannelReader_ReadPosition, VarName) == 0x000000, "Member 'NiagaraDataChannelReader_ReadPosition::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadPosition, Index_0) == 0x00000C, "Member 'NiagaraDataChannelReader_ReadPosition::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadPosition, IsValid) == 0x000010, "Member 'NiagaraDataChannelReader_ReadPosition::IsValid' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadPosition, ReturnValue) == 0x000014, "Member 'NiagaraDataChannelReader_ReadPosition::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.ReadQuat
// 0x0030 (0x0030 - 0x0000)
struct NiagaraDataChannelReader_ReadQuat final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelReader_ReadQuat) == 0x000010, "Wrong alignment on NiagaraDataChannelReader_ReadQuat");
static_assert(sizeof(NiagaraDataChannelReader_ReadQuat) == 0x000030, "Wrong size on NiagaraDataChannelReader_ReadQuat");
static_assert(offsetof(NiagaraDataChannelReader_ReadQuat, VarName) == 0x000000, "Member 'NiagaraDataChannelReader_ReadQuat::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadQuat, Index_0) == 0x00000C, "Member 'NiagaraDataChannelReader_ReadQuat::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadQuat, IsValid) == 0x000010, "Member 'NiagaraDataChannelReader_ReadQuat::IsValid' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadQuat, ReturnValue) == 0x000020, "Member 'NiagaraDataChannelReader_ReadQuat::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.ReadSpawnInfo
// 0x0024 (0x0024 - 0x0000)
struct NiagaraDataChannelReader_ReadSpawnInfo final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNiagaraSpawnInfo                      ReturnValue;                                       // 0x0014(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelReader_ReadSpawnInfo) == 0x000004, "Wrong alignment on NiagaraDataChannelReader_ReadSpawnInfo");
static_assert(sizeof(NiagaraDataChannelReader_ReadSpawnInfo) == 0x000024, "Wrong size on NiagaraDataChannelReader_ReadSpawnInfo");
static_assert(offsetof(NiagaraDataChannelReader_ReadSpawnInfo, VarName) == 0x000000, "Member 'NiagaraDataChannelReader_ReadSpawnInfo::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadSpawnInfo, Index_0) == 0x00000C, "Member 'NiagaraDataChannelReader_ReadSpawnInfo::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadSpawnInfo, IsValid) == 0x000010, "Member 'NiagaraDataChannelReader_ReadSpawnInfo::IsValid' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadSpawnInfo, ReturnValue) == 0x000014, "Member 'NiagaraDataChannelReader_ReadSpawnInfo::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.ReadVector
// 0x0020 (0x0020 - 0x0000)
struct NiagaraDataChannelReader_ReadVector final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelReader_ReadVector) == 0x000004, "Wrong alignment on NiagaraDataChannelReader_ReadVector");
static_assert(sizeof(NiagaraDataChannelReader_ReadVector) == 0x000020, "Wrong size on NiagaraDataChannelReader_ReadVector");
static_assert(offsetof(NiagaraDataChannelReader_ReadVector, VarName) == 0x000000, "Member 'NiagaraDataChannelReader_ReadVector::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadVector, Index_0) == 0x00000C, "Member 'NiagaraDataChannelReader_ReadVector::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadVector, IsValid) == 0x000010, "Member 'NiagaraDataChannelReader_ReadVector::IsValid' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadVector, ReturnValue) == 0x000014, "Member 'NiagaraDataChannelReader_ReadVector::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.ReadVector2D
// 0x001C (0x001C - 0x0000)
struct NiagaraDataChannelReader_ReadVector2D final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0014(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelReader_ReadVector2D) == 0x000004, "Wrong alignment on NiagaraDataChannelReader_ReadVector2D");
static_assert(sizeof(NiagaraDataChannelReader_ReadVector2D) == 0x00001C, "Wrong size on NiagaraDataChannelReader_ReadVector2D");
static_assert(offsetof(NiagaraDataChannelReader_ReadVector2D, VarName) == 0x000000, "Member 'NiagaraDataChannelReader_ReadVector2D::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadVector2D, Index_0) == 0x00000C, "Member 'NiagaraDataChannelReader_ReadVector2D::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadVector2D, IsValid) == 0x000010, "Member 'NiagaraDataChannelReader_ReadVector2D::IsValid' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadVector2D, ReturnValue) == 0x000014, "Member 'NiagaraDataChannelReader_ReadVector2D::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelReader.ReadVector4
// 0x0030 (0x0030 - 0x0000)
struct NiagaraDataChannelReader_ReadVector4 final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsValid;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelReader_ReadVector4) == 0x000010, "Wrong alignment on NiagaraDataChannelReader_ReadVector4");
static_assert(sizeof(NiagaraDataChannelReader_ReadVector4) == 0x000030, "Wrong size on NiagaraDataChannelReader_ReadVector4");
static_assert(offsetof(NiagaraDataChannelReader_ReadVector4, VarName) == 0x000000, "Member 'NiagaraDataChannelReader_ReadVector4::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadVector4, Index_0) == 0x00000C, "Member 'NiagaraDataChannelReader_ReadVector4::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadVector4, IsValid) == 0x000010, "Member 'NiagaraDataChannelReader_ReadVector4::IsValid' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelReader_ReadVector4, ReturnValue) == 0x000020, "Member 'NiagaraDataChannelReader_ReadVector4::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.InitWrite
// 0x0038 (0x0038 - 0x0000)
struct NiagaraDataChannelWriter_InitWrite final
{
public:
	struct FNiagaraDataChannelSearchParameters    SearchParams;                                      // 0x0000(0x0018)(Parm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisibleToGame;                                    // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisibleToCPU;                                     // 0x001D(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVisibleToGPU;                                     // 0x001E(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugSource;                                       // 0x0020(0x0010)(Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataChannelWriter_InitWrite) == 0x000008, "Wrong alignment on NiagaraDataChannelWriter_InitWrite");
static_assert(sizeof(NiagaraDataChannelWriter_InitWrite) == 0x000038, "Wrong size on NiagaraDataChannelWriter_InitWrite");
static_assert(offsetof(NiagaraDataChannelWriter_InitWrite, SearchParams) == 0x000000, "Member 'NiagaraDataChannelWriter_InitWrite::SearchParams' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_InitWrite, Count) == 0x000018, "Member 'NiagaraDataChannelWriter_InitWrite::Count' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_InitWrite, bVisibleToGame) == 0x00001C, "Member 'NiagaraDataChannelWriter_InitWrite::bVisibleToGame' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_InitWrite, bVisibleToCPU) == 0x00001D, "Member 'NiagaraDataChannelWriter_InitWrite::bVisibleToCPU' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_InitWrite, bVisibleToGPU) == 0x00001E, "Member 'NiagaraDataChannelWriter_InitWrite::bVisibleToGPU' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_InitWrite, DebugSource) == 0x000020, "Member 'NiagaraDataChannelWriter_InitWrite::DebugSource' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_InitWrite, ReturnValue) == 0x000030, "Member 'NiagaraDataChannelWriter_InitWrite::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.WriteBool
// 0x0014 (0x0014 - 0x0000)
struct NiagaraDataChannelWriter_WriteBool final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InData;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataChannelWriter_WriteBool) == 0x000004, "Wrong alignment on NiagaraDataChannelWriter_WriteBool");
static_assert(sizeof(NiagaraDataChannelWriter_WriteBool) == 0x000014, "Wrong size on NiagaraDataChannelWriter_WriteBool");
static_assert(offsetof(NiagaraDataChannelWriter_WriteBool, VarName) == 0x000000, "Member 'NiagaraDataChannelWriter_WriteBool::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteBool, Index_0) == 0x00000C, "Member 'NiagaraDataChannelWriter_WriteBool::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteBool, InData) == 0x000010, "Member 'NiagaraDataChannelWriter_WriteBool::InData' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.WriteEnum
// 0x0014 (0x0014 - 0x0000)
struct NiagaraDataChannelWriter_WriteEnum final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         InData;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataChannelWriter_WriteEnum) == 0x000004, "Wrong alignment on NiagaraDataChannelWriter_WriteEnum");
static_assert(sizeof(NiagaraDataChannelWriter_WriteEnum) == 0x000014, "Wrong size on NiagaraDataChannelWriter_WriteEnum");
static_assert(offsetof(NiagaraDataChannelWriter_WriteEnum, VarName) == 0x000000, "Member 'NiagaraDataChannelWriter_WriteEnum::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteEnum, Index_0) == 0x00000C, "Member 'NiagaraDataChannelWriter_WriteEnum::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteEnum, InData) == 0x000010, "Member 'NiagaraDataChannelWriter_WriteEnum::InData' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.WriteFloat
// 0x0018 (0x0018 - 0x0000)
struct NiagaraDataChannelWriter_WriteFloat final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        InData;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelWriter_WriteFloat) == 0x000008, "Wrong alignment on NiagaraDataChannelWriter_WriteFloat");
static_assert(sizeof(NiagaraDataChannelWriter_WriteFloat) == 0x000018, "Wrong size on NiagaraDataChannelWriter_WriteFloat");
static_assert(offsetof(NiagaraDataChannelWriter_WriteFloat, VarName) == 0x000000, "Member 'NiagaraDataChannelWriter_WriteFloat::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteFloat, Index_0) == 0x00000C, "Member 'NiagaraDataChannelWriter_WriteFloat::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteFloat, InData) == 0x000010, "Member 'NiagaraDataChannelWriter_WriteFloat::InData' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.WriteID
// 0x0018 (0x0018 - 0x0000)
struct NiagaraDataChannelWriter_WriteID final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraID                             InData;                                            // 0x0010(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelWriter_WriteID) == 0x000004, "Wrong alignment on NiagaraDataChannelWriter_WriteID");
static_assert(sizeof(NiagaraDataChannelWriter_WriteID) == 0x000018, "Wrong size on NiagaraDataChannelWriter_WriteID");
static_assert(offsetof(NiagaraDataChannelWriter_WriteID, VarName) == 0x000000, "Member 'NiagaraDataChannelWriter_WriteID::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteID, Index_0) == 0x00000C, "Member 'NiagaraDataChannelWriter_WriteID::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteID, InData) == 0x000010, "Member 'NiagaraDataChannelWriter_WriteID::InData' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.WriteInt
// 0x0014 (0x0014 - 0x0000)
struct NiagaraDataChannelWriter_WriteInt final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InData;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelWriter_WriteInt) == 0x000004, "Wrong alignment on NiagaraDataChannelWriter_WriteInt");
static_assert(sizeof(NiagaraDataChannelWriter_WriteInt) == 0x000014, "Wrong size on NiagaraDataChannelWriter_WriteInt");
static_assert(offsetof(NiagaraDataChannelWriter_WriteInt, VarName) == 0x000000, "Member 'NiagaraDataChannelWriter_WriteInt::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteInt, Index_0) == 0x00000C, "Member 'NiagaraDataChannelWriter_WriteInt::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteInt, InData) == 0x000010, "Member 'NiagaraDataChannelWriter_WriteInt::InData' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.WriteLinearColor
// 0x0020 (0x0020 - 0x0000)
struct NiagaraDataChannelWriter_WriteLinearColor final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           InData;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelWriter_WriteLinearColor) == 0x000004, "Wrong alignment on NiagaraDataChannelWriter_WriteLinearColor");
static_assert(sizeof(NiagaraDataChannelWriter_WriteLinearColor) == 0x000020, "Wrong size on NiagaraDataChannelWriter_WriteLinearColor");
static_assert(offsetof(NiagaraDataChannelWriter_WriteLinearColor, VarName) == 0x000000, "Member 'NiagaraDataChannelWriter_WriteLinearColor::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteLinearColor, Index_0) == 0x00000C, "Member 'NiagaraDataChannelWriter_WriteLinearColor::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteLinearColor, InData) == 0x000010, "Member 'NiagaraDataChannelWriter_WriteLinearColor::InData' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.WritePosition
// 0x001C (0x001C - 0x0000)
struct NiagaraDataChannelWriter_WritePosition final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InData;                                            // 0x0010(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelWriter_WritePosition) == 0x000004, "Wrong alignment on NiagaraDataChannelWriter_WritePosition");
static_assert(sizeof(NiagaraDataChannelWriter_WritePosition) == 0x00001C, "Wrong size on NiagaraDataChannelWriter_WritePosition");
static_assert(offsetof(NiagaraDataChannelWriter_WritePosition, VarName) == 0x000000, "Member 'NiagaraDataChannelWriter_WritePosition::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WritePosition, Index_0) == 0x00000C, "Member 'NiagaraDataChannelWriter_WritePosition::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WritePosition, InData) == 0x000010, "Member 'NiagaraDataChannelWriter_WritePosition::InData' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.WriteQuat
// 0x0020 (0x0020 - 0x0000)
struct NiagaraDataChannelWriter_WriteQuat final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  InData;                                            // 0x0010(0x0010)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelWriter_WriteQuat) == 0x000010, "Wrong alignment on NiagaraDataChannelWriter_WriteQuat");
static_assert(sizeof(NiagaraDataChannelWriter_WriteQuat) == 0x000020, "Wrong size on NiagaraDataChannelWriter_WriteQuat");
static_assert(offsetof(NiagaraDataChannelWriter_WriteQuat, VarName) == 0x000000, "Member 'NiagaraDataChannelWriter_WriteQuat::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteQuat, Index_0) == 0x00000C, "Member 'NiagaraDataChannelWriter_WriteQuat::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteQuat, InData) == 0x000010, "Member 'NiagaraDataChannelWriter_WriteQuat::InData' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.WriteSpawnInfo
// 0x0020 (0x0020 - 0x0000)
struct NiagaraDataChannelWriter_WriteSpawnInfo final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraSpawnInfo                      InData;                                            // 0x0010(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelWriter_WriteSpawnInfo) == 0x000004, "Wrong alignment on NiagaraDataChannelWriter_WriteSpawnInfo");
static_assert(sizeof(NiagaraDataChannelWriter_WriteSpawnInfo) == 0x000020, "Wrong size on NiagaraDataChannelWriter_WriteSpawnInfo");
static_assert(offsetof(NiagaraDataChannelWriter_WriteSpawnInfo, VarName) == 0x000000, "Member 'NiagaraDataChannelWriter_WriteSpawnInfo::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteSpawnInfo, Index_0) == 0x00000C, "Member 'NiagaraDataChannelWriter_WriteSpawnInfo::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteSpawnInfo, InData) == 0x000010, "Member 'NiagaraDataChannelWriter_WriteSpawnInfo::InData' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.WriteVector
// 0x001C (0x001C - 0x0000)
struct NiagaraDataChannelWriter_WriteVector final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InData;                                            // 0x0010(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelWriter_WriteVector) == 0x000004, "Wrong alignment on NiagaraDataChannelWriter_WriteVector");
static_assert(sizeof(NiagaraDataChannelWriter_WriteVector) == 0x00001C, "Wrong size on NiagaraDataChannelWriter_WriteVector");
static_assert(offsetof(NiagaraDataChannelWriter_WriteVector, VarName) == 0x000000, "Member 'NiagaraDataChannelWriter_WriteVector::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteVector, Index_0) == 0x00000C, "Member 'NiagaraDataChannelWriter_WriteVector::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteVector, InData) == 0x000010, "Member 'NiagaraDataChannelWriter_WriteVector::InData' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.WriteVector2D
// 0x0018 (0x0018 - 0x0000)
struct NiagaraDataChannelWriter_WriteVector2D final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              InData;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelWriter_WriteVector2D) == 0x000004, "Wrong alignment on NiagaraDataChannelWriter_WriteVector2D");
static_assert(sizeof(NiagaraDataChannelWriter_WriteVector2D) == 0x000018, "Wrong size on NiagaraDataChannelWriter_WriteVector2D");
static_assert(offsetof(NiagaraDataChannelWriter_WriteVector2D, VarName) == 0x000000, "Member 'NiagaraDataChannelWriter_WriteVector2D::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteVector2D, Index_0) == 0x00000C, "Member 'NiagaraDataChannelWriter_WriteVector2D::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteVector2D, InData) == 0x000010, "Member 'NiagaraDataChannelWriter_WriteVector2D::InData' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.WriteVector4
// 0x0020 (0x0020 - 0x0000)
struct NiagaraDataChannelWriter_WriteVector4 final
{
public:
	class FName                                   VarName;                                           // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               InData;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelWriter_WriteVector4) == 0x000010, "Wrong alignment on NiagaraDataChannelWriter_WriteVector4");
static_assert(sizeof(NiagaraDataChannelWriter_WriteVector4) == 0x000020, "Wrong size on NiagaraDataChannelWriter_WriteVector4");
static_assert(offsetof(NiagaraDataChannelWriter_WriteVector4, VarName) == 0x000000, "Member 'NiagaraDataChannelWriter_WriteVector4::VarName' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteVector4, Index_0) == 0x00000C, "Member 'NiagaraDataChannelWriter_WriteVector4::Index_0' has a wrong offset!");
static_assert(offsetof(NiagaraDataChannelWriter_WriteVector4, InData) == 0x000010, "Member 'NiagaraDataChannelWriter_WriteVector4::InData' has a wrong offset!");

// Function Niagara.NiagaraDataChannelWriter.Num
// 0x0004 (0x0004 - 0x0000)
struct NiagaraDataChannelWriter_Num final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataChannelWriter_Num) == 0x000004, "Wrong alignment on NiagaraDataChannelWriter_Num");
static_assert(sizeof(NiagaraDataChannelWriter_Num) == 0x000004, "Wrong size on NiagaraDataChannelWriter_Num");
static_assert(offsetof(NiagaraDataChannelWriter_Num, ReturnValue) == 0x000000, "Member 'NiagaraDataChannelWriter_Num::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayBool
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayBool final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayBool) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayBool");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayBool) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayBool");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayBool, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayBool::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayBool, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayBool::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayBool, ReturnValue) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayBool::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayColor
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayColor final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayColor) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayColor");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayColor) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayColor");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayColor, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayColor::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayColor, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayColor::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayColor, ReturnValue) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayColor::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayFloat
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayFloat final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayFloat) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayFloat");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayFloat) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayFloat");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayFloat, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayFloat::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayFloat, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayFloat::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayFloat, ReturnValue) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayFloat::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayInt32
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayInt32 final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayInt32) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayInt32");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayInt32) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayInt32");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayInt32, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayInt32::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayInt32, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayInt32::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayInt32, ReturnValue) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayInt32::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayQuat
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayQuat final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FQuat>                          ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayQuat) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayQuat");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayQuat) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayQuat");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayQuat, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayQuat::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayQuat, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayQuat::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayQuat, ReturnValue) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayQuat::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayVector
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector, ReturnValue) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayVector2D
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector2D final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector2D) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector2D");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector2D) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector2D");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector2D, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector2D::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector2D, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector2D::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector2D, ReturnValue) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector2D::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.GetNiagaraArrayVector4
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector4 final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector4>                       ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector4) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector4");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector4) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector4");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector4, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector4::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector4, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector4::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector4, ReturnValue) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_GetNiagaraArrayVector4::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayBool
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayBool final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  ArrayData;                                         // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayBool) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayBool");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayBool) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayBool");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayBool, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayBool::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayBool, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayBool::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayBool, ArrayData) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayBool::ArrayData' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayColor
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayColor final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   ArrayData;                                         // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayColor) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayColor");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayColor) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayColor");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayColor, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayColor::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayColor, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayColor::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayColor, ArrayData) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayColor::ArrayData' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayFloat
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayFloat final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 ArrayData;                                         // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayFloat) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayFloat");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayFloat) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayFloat");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayFloat, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayFloat::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayFloat, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayFloat::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayFloat, ArrayData) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayFloat::ArrayData' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayInt32
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayInt32 final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ArrayData;                                         // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayInt32) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayInt32");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayInt32) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayInt32");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayInt32, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayInt32::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayInt32, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayInt32::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayInt32, ArrayData) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayInt32::ArrayData' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayQuat
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayQuat final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FQuat>                          ArrayData;                                         // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayQuat) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayQuat");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayQuat) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayQuat");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayQuat, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayQuat::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayQuat, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayQuat::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayQuat, ArrayData) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayQuat::ArrayData' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayVector
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        ArrayData;                                         // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector, ArrayData) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector::ArrayData' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayVector2D
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector2D final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      ArrayData;                                         // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector2D) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector2D");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector2D) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector2D");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector2D, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector2D::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector2D, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector2D::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector2D, ArrayData) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector2D::ArrayData' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceArrayFunctionLibrary.SetNiagaraArrayVector4
// 0x0028 (0x0028 - 0x0000)
struct NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector4 final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OverrideName;                                      // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector4>                       ArrayData;                                         // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector4) == 0x000008, "Wrong alignment on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector4");
static_assert(sizeof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector4) == 0x000028, "Wrong size on NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector4");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector4, NiagaraSystem) == 0x000000, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector4::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector4, OverrideName) == 0x000008, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector4::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector4, ArrayData) == 0x000018, "Member 'NiagaraDataInterfaceArrayFunctionLibrary_SetNiagaraArrayVector4::ArrayData' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceGrid2DCollection.FillRawTexture2D
// 0x0020 (0x0020 - 0x0000)
struct NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D final
{
public:
	const class UNiagaraComponent*                Component;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 Dest;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TilesX;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TilesY;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D) == 0x000008, "Wrong alignment on NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D");
static_assert(sizeof(NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D) == 0x000020, "Wrong size on NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D, Component) == 0x000000, "Member 'NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D::Component' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D, Dest) == 0x000008, "Member 'NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D::Dest' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D, TilesX) == 0x000010, "Member 'NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D::TilesX' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D, TilesY) == 0x000014, "Member 'NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D::TilesY' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D, ReturnValue) == 0x000018, "Member 'NiagaraDataInterfaceGrid2DCollection_FillRawTexture2D::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceGrid2DCollection.FillTexture2D
// 0x0018 (0x0018 - 0x0000)
struct NiagaraDataInterfaceGrid2DCollection_FillTexture2D final
{
public:
	const class UNiagaraComponent*                Component;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                 dest;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttributeIndex;                                    // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataInterfaceGrid2DCollection_FillTexture2D) == 0x000008, "Wrong alignment on NiagaraDataInterfaceGrid2DCollection_FillTexture2D");
static_assert(sizeof(NiagaraDataInterfaceGrid2DCollection_FillTexture2D) == 0x000018, "Wrong size on NiagaraDataInterfaceGrid2DCollection_FillTexture2D");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_FillTexture2D, Component) == 0x000000, "Member 'NiagaraDataInterfaceGrid2DCollection_FillTexture2D::Component' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_FillTexture2D, dest) == 0x000008, "Member 'NiagaraDataInterfaceGrid2DCollection_FillTexture2D::dest' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_FillTexture2D, AttributeIndex) == 0x000010, "Member 'NiagaraDataInterfaceGrid2DCollection_FillTexture2D::AttributeIndex' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_FillTexture2D, ReturnValue) == 0x000014, "Member 'NiagaraDataInterfaceGrid2DCollection_FillTexture2D::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceGrid2DCollection.GetRawTextureSize
// 0x0010 (0x0010 - 0x0000)
struct NiagaraDataInterfaceGrid2DCollection_GetRawTextureSize final
{
public:
	const class UNiagaraComponent*                Component;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeX;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeY;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceGrid2DCollection_GetRawTextureSize) == 0x000008, "Wrong alignment on NiagaraDataInterfaceGrid2DCollection_GetRawTextureSize");
static_assert(sizeof(NiagaraDataInterfaceGrid2DCollection_GetRawTextureSize) == 0x000010, "Wrong size on NiagaraDataInterfaceGrid2DCollection_GetRawTextureSize");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_GetRawTextureSize, Component) == 0x000000, "Member 'NiagaraDataInterfaceGrid2DCollection_GetRawTextureSize::Component' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_GetRawTextureSize, SizeX) == 0x000008, "Member 'NiagaraDataInterfaceGrid2DCollection_GetRawTextureSize::SizeX' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_GetRawTextureSize, SizeY) == 0x00000C, "Member 'NiagaraDataInterfaceGrid2DCollection_GetRawTextureSize::SizeY' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceGrid2DCollection.GetTextureSize
// 0x0010 (0x0010 - 0x0000)
struct NiagaraDataInterfaceGrid2DCollection_GetTextureSize final
{
public:
	const class UNiagaraComponent*                Component;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeX;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeY;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraDataInterfaceGrid2DCollection_GetTextureSize) == 0x000008, "Wrong alignment on NiagaraDataInterfaceGrid2DCollection_GetTextureSize");
static_assert(sizeof(NiagaraDataInterfaceGrid2DCollection_GetTextureSize) == 0x000010, "Wrong size on NiagaraDataInterfaceGrid2DCollection_GetTextureSize");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_GetTextureSize, Component) == 0x000000, "Member 'NiagaraDataInterfaceGrid2DCollection_GetTextureSize::Component' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_GetTextureSize, SizeX) == 0x000008, "Member 'NiagaraDataInterfaceGrid2DCollection_GetTextureSize::SizeX' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid2DCollection_GetTextureSize, SizeY) == 0x00000C, "Member 'NiagaraDataInterfaceGrid2DCollection_GetTextureSize::SizeY' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceGrid3DCollection.FillRawVolumeTexture
// 0x0020 (0x0020 - 0x0000)
struct NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture final
{
public:
	const class UNiagaraComponent*                Component;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVolumeTexture*                         Dest;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TilesX;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TilesY;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TileZ;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture) == 0x000008, "Wrong alignment on NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture");
static_assert(sizeof(NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture) == 0x000020, "Wrong size on NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture, Component) == 0x000000, "Member 'NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture::Component' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture, Dest) == 0x000008, "Member 'NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture::Dest' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture, TilesX) == 0x000010, "Member 'NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture::TilesX' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture, TilesY) == 0x000014, "Member 'NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture::TilesY' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture, TileZ) == 0x000018, "Member 'NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture::TileZ' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture, ReturnValue) == 0x00001C, "Member 'NiagaraDataInterfaceGrid3DCollection_FillRawVolumeTexture::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceGrid3DCollection.FillVolumeTexture
// 0x0018 (0x0018 - 0x0000)
struct NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture final
{
public:
	const class UNiagaraComponent*                Component;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVolumeTexture*                         dest;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AttributeIndex;                                    // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture) == 0x000008, "Wrong alignment on NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture");
static_assert(sizeof(NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture) == 0x000018, "Wrong size on NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture, Component) == 0x000000, "Member 'NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture::Component' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture, dest) == 0x000008, "Member 'NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture::dest' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture, AttributeIndex) == 0x000010, "Member 'NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture::AttributeIndex' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture, ReturnValue) == 0x000014, "Member 'NiagaraDataInterfaceGrid3DCollection_FillVolumeTexture::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceGrid3DCollection.GetRawTextureSize
// 0x0018 (0x0018 - 0x0000)
struct NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize final
{
public:
	const class UNiagaraComponent*                Component;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeX;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeY;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeZ;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize) == 0x000008, "Wrong alignment on NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize");
static_assert(sizeof(NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize) == 0x000018, "Wrong size on NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize, Component) == 0x000000, "Member 'NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize::Component' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize, SizeX) == 0x000008, "Member 'NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize::SizeX' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize, SizeY) == 0x00000C, "Member 'NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize::SizeY' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize, SizeZ) == 0x000010, "Member 'NiagaraDataInterfaceGrid3DCollection_GetRawTextureSize::SizeZ' has a wrong offset!");

// Function Niagara.NiagaraDataInterfaceGrid3DCollection.GetTextureSize
// 0x0018 (0x0018 - 0x0000)
struct NiagaraDataInterfaceGrid3DCollection_GetTextureSize final
{
public:
	const class UNiagaraComponent*                Component;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeX;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeY;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeZ;                                             // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraDataInterfaceGrid3DCollection_GetTextureSize) == 0x000008, "Wrong alignment on NiagaraDataInterfaceGrid3DCollection_GetTextureSize");
static_assert(sizeof(NiagaraDataInterfaceGrid3DCollection_GetTextureSize) == 0x000018, "Wrong size on NiagaraDataInterfaceGrid3DCollection_GetTextureSize");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_GetTextureSize, Component) == 0x000000, "Member 'NiagaraDataInterfaceGrid3DCollection_GetTextureSize::Component' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_GetTextureSize, SizeX) == 0x000008, "Member 'NiagaraDataInterfaceGrid3DCollection_GetTextureSize::SizeX' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_GetTextureSize, SizeY) == 0x00000C, "Member 'NiagaraDataInterfaceGrid3DCollection_GetTextureSize::SizeY' has a wrong offset!");
static_assert(offsetof(NiagaraDataInterfaceGrid3DCollection_GetTextureSize, SizeZ) == 0x000010, "Member 'NiagaraDataInterfaceGrid3DCollection_GetTextureSize::SizeZ' has a wrong offset!");

// Function Niagara.NiagaraFunctionLibrary.GetGlobalInfo
// 0x0010 (0x0010 - 0x0000)
struct NiagaraFunctionLibrary_GetGlobalInfo final
{
public:
	struct FNiagaraGlobalInfoInHUD                ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraFunctionLibrary_GetGlobalInfo) == 0x000004, "Wrong alignment on NiagaraFunctionLibrary_GetGlobalInfo");
static_assert(sizeof(NiagaraFunctionLibrary_GetGlobalInfo) == 0x000010, "Wrong size on NiagaraFunctionLibrary_GetGlobalInfo");
static_assert(offsetof(NiagaraFunctionLibrary_GetGlobalInfo, ReturnValue) == 0x000000, "Member 'NiagaraFunctionLibrary_GetGlobalInfo::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraFunctionLibrary.GetNiagaraParameterCollection
// 0x0018 (0x0018 - 0x0000)
struct NiagaraFunctionLibrary_GetNiagaraParameterCollection final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraParameterCollection*            Collection;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraParameterCollectionInstance*    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraFunctionLibrary_GetNiagaraParameterCollection) == 0x000008, "Wrong alignment on NiagaraFunctionLibrary_GetNiagaraParameterCollection");
static_assert(sizeof(NiagaraFunctionLibrary_GetNiagaraParameterCollection) == 0x000018, "Wrong size on NiagaraFunctionLibrary_GetNiagaraParameterCollection");
static_assert(offsetof(NiagaraFunctionLibrary_GetNiagaraParameterCollection, WorldContextObject) == 0x000000, "Member 'NiagaraFunctionLibrary_GetNiagaraParameterCollection::WorldContextObject' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_GetNiagaraParameterCollection, Collection) == 0x000008, "Member 'NiagaraFunctionLibrary_GetNiagaraParameterCollection::Collection' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_GetNiagaraParameterCollection, ReturnValue) == 0x000010, "Member 'NiagaraFunctionLibrary_GetNiagaraParameterCollection::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraFunctionLibrary.MarkNiagaraScalabilityNeedUpdate
// 0x0008 (0x0008 - 0x0000)
struct NiagaraFunctionLibrary_MarkNiagaraScalabilityNeedUpdate final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraFunctionLibrary_MarkNiagaraScalabilityNeedUpdate) == 0x000008, "Wrong alignment on NiagaraFunctionLibrary_MarkNiagaraScalabilityNeedUpdate");
static_assert(sizeof(NiagaraFunctionLibrary_MarkNiagaraScalabilityNeedUpdate) == 0x000008, "Wrong size on NiagaraFunctionLibrary_MarkNiagaraScalabilityNeedUpdate");
static_assert(offsetof(NiagaraFunctionLibrary_MarkNiagaraScalabilityNeedUpdate, WorldContextObject) == 0x000000, "Member 'NiagaraFunctionLibrary_MarkNiagaraScalabilityNeedUpdate::WorldContextObject' has a wrong offset!");

// Function Niagara.NiagaraFunctionLibrary.OverrideSystemUserVariableSkeletalMeshComponent
// 0x0020 (0x0020 - 0x0000)
struct NiagaraFunctionLibrary_OverrideSystemUserVariableSkeletalMeshComponent final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OverrideName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0018(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraFunctionLibrary_OverrideSystemUserVariableSkeletalMeshComponent) == 0x000008, "Wrong alignment on NiagaraFunctionLibrary_OverrideSystemUserVariableSkeletalMeshComponent");
static_assert(sizeof(NiagaraFunctionLibrary_OverrideSystemUserVariableSkeletalMeshComponent) == 0x000020, "Wrong size on NiagaraFunctionLibrary_OverrideSystemUserVariableSkeletalMeshComponent");
static_assert(offsetof(NiagaraFunctionLibrary_OverrideSystemUserVariableSkeletalMeshComponent, NiagaraSystem) == 0x000000, "Member 'NiagaraFunctionLibrary_OverrideSystemUserVariableSkeletalMeshComponent::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_OverrideSystemUserVariableSkeletalMeshComponent, OverrideName) == 0x000008, "Member 'NiagaraFunctionLibrary_OverrideSystemUserVariableSkeletalMeshComponent::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_OverrideSystemUserVariableSkeletalMeshComponent, SkeletalMeshComponent) == 0x000018, "Member 'NiagaraFunctionLibrary_OverrideSystemUserVariableSkeletalMeshComponent::SkeletalMeshComponent' has a wrong offset!");

// Function Niagara.NiagaraFunctionLibrary.OverrideSystemUserVariableStaticMesh
// 0x0020 (0x0020 - 0x0000)
struct NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMesh final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OverrideName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            StaticMesh;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMesh) == 0x000008, "Wrong alignment on NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMesh");
static_assert(sizeof(NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMesh) == 0x000020, "Wrong size on NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMesh");
static_assert(offsetof(NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMesh, NiagaraSystem) == 0x000000, "Member 'NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMesh::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMesh, OverrideName) == 0x000008, "Member 'NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMesh::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMesh, StaticMesh) == 0x000018, "Member 'NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMesh::StaticMesh' has a wrong offset!");

// Function Niagara.NiagaraFunctionLibrary.OverrideSystemUserVariableStaticMeshComponent
// 0x0020 (0x0020 - 0x0000)
struct NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMeshComponent final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OverrideName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x0018(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMeshComponent) == 0x000008, "Wrong alignment on NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMeshComponent");
static_assert(sizeof(NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMeshComponent) == 0x000020, "Wrong size on NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMeshComponent");
static_assert(offsetof(NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMeshComponent, NiagaraSystem) == 0x000000, "Member 'NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMeshComponent::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMeshComponent, OverrideName) == 0x000008, "Member 'NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMeshComponent::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMeshComponent, StaticMeshComponent) == 0x000018, "Member 'NiagaraFunctionLibrary_OverrideSystemUserVariableStaticMeshComponent::StaticMeshComponent' has a wrong offset!");

// Function Niagara.NiagaraFunctionLibrary.SetSkeletalMeshDataInterfaceSamplingRegions
// 0x0028 (0x0028 - 0x0000)
struct NiagaraFunctionLibrary_SetSkeletalMeshDataInterfaceSamplingRegions final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OverrideName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           SamplingRegions;                                   // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraFunctionLibrary_SetSkeletalMeshDataInterfaceSamplingRegions) == 0x000008, "Wrong alignment on NiagaraFunctionLibrary_SetSkeletalMeshDataInterfaceSamplingRegions");
static_assert(sizeof(NiagaraFunctionLibrary_SetSkeletalMeshDataInterfaceSamplingRegions) == 0x000028, "Wrong size on NiagaraFunctionLibrary_SetSkeletalMeshDataInterfaceSamplingRegions");
static_assert(offsetof(NiagaraFunctionLibrary_SetSkeletalMeshDataInterfaceSamplingRegions, NiagaraSystem) == 0x000000, "Member 'NiagaraFunctionLibrary_SetSkeletalMeshDataInterfaceSamplingRegions::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SetSkeletalMeshDataInterfaceSamplingRegions, OverrideName) == 0x000008, "Member 'NiagaraFunctionLibrary_SetSkeletalMeshDataInterfaceSamplingRegions::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SetSkeletalMeshDataInterfaceSamplingRegions, SamplingRegions) == 0x000018, "Member 'NiagaraFunctionLibrary_SetSkeletalMeshDataInterfaceSamplingRegions::SamplingRegions' has a wrong offset!");

// Function Niagara.NiagaraFunctionLibrary.SetTextureObject
// 0x0020 (0x0020 - 0x0000)
struct NiagaraFunctionLibrary_SetTextureObject final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OverrideName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                               Texture;                                           // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraFunctionLibrary_SetTextureObject) == 0x000008, "Wrong alignment on NiagaraFunctionLibrary_SetTextureObject");
static_assert(sizeof(NiagaraFunctionLibrary_SetTextureObject) == 0x000020, "Wrong size on NiagaraFunctionLibrary_SetTextureObject");
static_assert(offsetof(NiagaraFunctionLibrary_SetTextureObject, NiagaraSystem) == 0x000000, "Member 'NiagaraFunctionLibrary_SetTextureObject::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SetTextureObject, OverrideName) == 0x000008, "Member 'NiagaraFunctionLibrary_SetTextureObject::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SetTextureObject, Texture) == 0x000018, "Member 'NiagaraFunctionLibrary_SetTextureObject::Texture' has a wrong offset!");

// Function Niagara.NiagaraFunctionLibrary.SetVolumeTextureObject
// 0x0020 (0x0020 - 0x0000)
struct NiagaraFunctionLibrary_SetVolumeTextureObject final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OverrideName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVolumeTexture*                         Texture;                                           // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraFunctionLibrary_SetVolumeTextureObject) == 0x000008, "Wrong alignment on NiagaraFunctionLibrary_SetVolumeTextureObject");
static_assert(sizeof(NiagaraFunctionLibrary_SetVolumeTextureObject) == 0x000020, "Wrong size on NiagaraFunctionLibrary_SetVolumeTextureObject");
static_assert(offsetof(NiagaraFunctionLibrary_SetVolumeTextureObject, NiagaraSystem) == 0x000000, "Member 'NiagaraFunctionLibrary_SetVolumeTextureObject::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SetVolumeTextureObject, OverrideName) == 0x000008, "Member 'NiagaraFunctionLibrary_SetVolumeTextureObject::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SetVolumeTextureObject, Texture) == 0x000018, "Member 'NiagaraFunctionLibrary_SetVolumeTextureObject::Texture' has a wrong offset!");

// Function Niagara.NiagaraFunctionLibrary.SpawnSystemAtLocation
// 0x0040 (0x0040 - 0x0000)
struct NiagaraFunctionLibrary_SpawnSystemAtLocation final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraSystem*                         SystemTemplate;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0010(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x001C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                Scale;                                             // 0x0028(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoDestroy;                                      // 0x0034(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoActivate;                                     // 0x0035(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENCPoolMethod                                 PoolingMethod;                                     // 0x0036(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPreCullCheck;                                     // 0x0037(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraComponent*                      ReturnValue;                                       // 0x0038(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraFunctionLibrary_SpawnSystemAtLocation) == 0x000008, "Wrong alignment on NiagaraFunctionLibrary_SpawnSystemAtLocation");
static_assert(sizeof(NiagaraFunctionLibrary_SpawnSystemAtLocation) == 0x000040, "Wrong size on NiagaraFunctionLibrary_SpawnSystemAtLocation");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAtLocation, WorldContextObject) == 0x000000, "Member 'NiagaraFunctionLibrary_SpawnSystemAtLocation::WorldContextObject' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAtLocation, SystemTemplate) == 0x000008, "Member 'NiagaraFunctionLibrary_SpawnSystemAtLocation::SystemTemplate' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAtLocation, Location) == 0x000010, "Member 'NiagaraFunctionLibrary_SpawnSystemAtLocation::Location' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAtLocation, Rotation) == 0x00001C, "Member 'NiagaraFunctionLibrary_SpawnSystemAtLocation::Rotation' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAtLocation, Scale) == 0x000028, "Member 'NiagaraFunctionLibrary_SpawnSystemAtLocation::Scale' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAtLocation, bAutoDestroy) == 0x000034, "Member 'NiagaraFunctionLibrary_SpawnSystemAtLocation::bAutoDestroy' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAtLocation, bAutoActivate) == 0x000035, "Member 'NiagaraFunctionLibrary_SpawnSystemAtLocation::bAutoActivate' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAtLocation, PoolingMethod) == 0x000036, "Member 'NiagaraFunctionLibrary_SpawnSystemAtLocation::PoolingMethod' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAtLocation, bPreCullCheck) == 0x000037, "Member 'NiagaraFunctionLibrary_SpawnSystemAtLocation::bPreCullCheck' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAtLocation, ReturnValue) == 0x000038, "Member 'NiagaraFunctionLibrary_SpawnSystemAtLocation::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraFunctionLibrary.SpawnSystemAttached
// 0x0048 (0x0048 - 0x0000)
struct NiagaraFunctionLibrary_SpawnSystemAttached final
{
public:
	class UNiagaraSystem*                         SystemTemplate;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        AttachToComponent;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttachPointName;                                   // 0x0010(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x001C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               Rotation;                                          // 0x0028(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	EAttachLocation                               LocationType;                                      // 0x0034(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoDestroy;                                      // 0x0035(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoActivate;                                     // 0x0036(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENCPoolMethod                                 PoolingMethod;                                     // 0x0037(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPreCullCheck;                                     // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      ReturnValue;                                       // 0x0040(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraFunctionLibrary_SpawnSystemAttached) == 0x000008, "Wrong alignment on NiagaraFunctionLibrary_SpawnSystemAttached");
static_assert(sizeof(NiagaraFunctionLibrary_SpawnSystemAttached) == 0x000048, "Wrong size on NiagaraFunctionLibrary_SpawnSystemAttached");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAttached, SystemTemplate) == 0x000000, "Member 'NiagaraFunctionLibrary_SpawnSystemAttached::SystemTemplate' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAttached, AttachToComponent) == 0x000008, "Member 'NiagaraFunctionLibrary_SpawnSystemAttached::AttachToComponent' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAttached, AttachPointName) == 0x000010, "Member 'NiagaraFunctionLibrary_SpawnSystemAttached::AttachPointName' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAttached, Location) == 0x00001C, "Member 'NiagaraFunctionLibrary_SpawnSystemAttached::Location' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAttached, Rotation) == 0x000028, "Member 'NiagaraFunctionLibrary_SpawnSystemAttached::Rotation' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAttached, LocationType) == 0x000034, "Member 'NiagaraFunctionLibrary_SpawnSystemAttached::LocationType' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAttached, bAutoDestroy) == 0x000035, "Member 'NiagaraFunctionLibrary_SpawnSystemAttached::bAutoDestroy' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAttached, bAutoActivate) == 0x000036, "Member 'NiagaraFunctionLibrary_SpawnSystemAttached::bAutoActivate' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAttached, PoolingMethod) == 0x000037, "Member 'NiagaraFunctionLibrary_SpawnSystemAttached::PoolingMethod' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAttached, bPreCullCheck) == 0x000038, "Member 'NiagaraFunctionLibrary_SpawnSystemAttached::bPreCullCheck' has a wrong offset!");
static_assert(offsetof(NiagaraFunctionLibrary_SpawnSystemAttached, ReturnValue) == 0x000040, "Member 'NiagaraFunctionLibrary_SpawnSystemAttached::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.GetBoolParameter
// 0x0018 (0x0018 - 0x0000)
struct NiagaraParameterCollectionInstance_GetBoolParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraParameterCollectionInstance_GetBoolParameter) == 0x000008, "Wrong alignment on NiagaraParameterCollectionInstance_GetBoolParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_GetBoolParameter) == 0x000018, "Wrong size on NiagaraParameterCollectionInstance_GetBoolParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetBoolParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_GetBoolParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetBoolParameter, ReturnValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_GetBoolParameter::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.GetColorParameter
// 0x0020 (0x0020 - 0x0000)
struct NiagaraParameterCollectionInstance_GetColorParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraParameterCollectionInstance_GetColorParameter) == 0x000008, "Wrong alignment on NiagaraParameterCollectionInstance_GetColorParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_GetColorParameter) == 0x000020, "Wrong size on NiagaraParameterCollectionInstance_GetColorParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetColorParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_GetColorParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetColorParameter, ReturnValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_GetColorParameter::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.GetFloatParameter
// 0x0018 (0x0018 - 0x0000)
struct NiagaraParameterCollectionInstance_GetFloatParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraParameterCollectionInstance_GetFloatParameter) == 0x000008, "Wrong alignment on NiagaraParameterCollectionInstance_GetFloatParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_GetFloatParameter) == 0x000018, "Wrong size on NiagaraParameterCollectionInstance_GetFloatParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetFloatParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_GetFloatParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetFloatParameter, ReturnValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_GetFloatParameter::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.GetIntParameter
// 0x0018 (0x0018 - 0x0000)
struct NiagaraParameterCollectionInstance_GetIntParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraParameterCollectionInstance_GetIntParameter) == 0x000008, "Wrong alignment on NiagaraParameterCollectionInstance_GetIntParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_GetIntParameter) == 0x000018, "Wrong size on NiagaraParameterCollectionInstance_GetIntParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetIntParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_GetIntParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetIntParameter, ReturnValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_GetIntParameter::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.GetQuatParameter
// 0x0020 (0x0020 - 0x0000)
struct NiagaraParameterCollectionInstance_GetQuatParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraParameterCollectionInstance_GetQuatParameter) == 0x000010, "Wrong alignment on NiagaraParameterCollectionInstance_GetQuatParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_GetQuatParameter) == 0x000020, "Wrong size on NiagaraParameterCollectionInstance_GetQuatParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetQuatParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_GetQuatParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetQuatParameter, ReturnValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_GetQuatParameter::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.GetVector2DParameter
// 0x0018 (0x0018 - 0x0000)
struct NiagaraParameterCollectionInstance_GetVector2DParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraParameterCollectionInstance_GetVector2DParameter) == 0x000008, "Wrong alignment on NiagaraParameterCollectionInstance_GetVector2DParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_GetVector2DParameter) == 0x000018, "Wrong size on NiagaraParameterCollectionInstance_GetVector2DParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetVector2DParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_GetVector2DParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetVector2DParameter, ReturnValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_GetVector2DParameter::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.GetVector4Parameter
// 0x0020 (0x0020 - 0x0000)
struct NiagaraParameterCollectionInstance_GetVector4Parameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraParameterCollectionInstance_GetVector4Parameter) == 0x000010, "Wrong alignment on NiagaraParameterCollectionInstance_GetVector4Parameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_GetVector4Parameter) == 0x000020, "Wrong size on NiagaraParameterCollectionInstance_GetVector4Parameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetVector4Parameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_GetVector4Parameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetVector4Parameter, ReturnValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_GetVector4Parameter::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.GetVectorParameter
// 0x0020 (0x0020 - 0x0000)
struct NiagaraParameterCollectionInstance_GetVectorParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraParameterCollectionInstance_GetVectorParameter) == 0x000008, "Wrong alignment on NiagaraParameterCollectionInstance_GetVectorParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_GetVectorParameter) == 0x000020, "Wrong size on NiagaraParameterCollectionInstance_GetVectorParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetVectorParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_GetVectorParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_GetVectorParameter, ReturnValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_GetVectorParameter::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.SetBoolParameter
// 0x0018 (0x0018 - 0x0000)
struct NiagaraParameterCollectionInstance_SetBoolParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraParameterCollectionInstance_SetBoolParameter) == 0x000008, "Wrong alignment on NiagaraParameterCollectionInstance_SetBoolParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_SetBoolParameter) == 0x000018, "Wrong size on NiagaraParameterCollectionInstance_SetBoolParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetBoolParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_SetBoolParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetBoolParameter, InValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_SetBoolParameter::InValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.SetColorParameter
// 0x0020 (0x0020 - 0x0000)
struct NiagaraParameterCollectionInstance_SetColorParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           InValue;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraParameterCollectionInstance_SetColorParameter) == 0x000008, "Wrong alignment on NiagaraParameterCollectionInstance_SetColorParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_SetColorParameter) == 0x000020, "Wrong size on NiagaraParameterCollectionInstance_SetColorParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetColorParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_SetColorParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetColorParameter, InValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_SetColorParameter::InValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.SetFloatParameter
// 0x0018 (0x0018 - 0x0000)
struct NiagaraParameterCollectionInstance_SetFloatParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InValue;                                           // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraParameterCollectionInstance_SetFloatParameter) == 0x000008, "Wrong alignment on NiagaraParameterCollectionInstance_SetFloatParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_SetFloatParameter) == 0x000018, "Wrong size on NiagaraParameterCollectionInstance_SetFloatParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetFloatParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_SetFloatParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetFloatParameter, InValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_SetFloatParameter::InValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.SetIntParameter
// 0x0018 (0x0018 - 0x0000)
struct NiagaraParameterCollectionInstance_SetIntParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InValue;                                           // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraParameterCollectionInstance_SetIntParameter) == 0x000008, "Wrong alignment on NiagaraParameterCollectionInstance_SetIntParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_SetIntParameter) == 0x000018, "Wrong size on NiagaraParameterCollectionInstance_SetIntParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetIntParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_SetIntParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetIntParameter, InValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_SetIntParameter::InValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.SetQuatParameter
// 0x0020 (0x0020 - 0x0000)
struct NiagaraParameterCollectionInstance_SetQuatParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  InValue;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraParameterCollectionInstance_SetQuatParameter) == 0x000010, "Wrong alignment on NiagaraParameterCollectionInstance_SetQuatParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_SetQuatParameter) == 0x000020, "Wrong size on NiagaraParameterCollectionInstance_SetQuatParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetQuatParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_SetQuatParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetQuatParameter, InValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_SetQuatParameter::InValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.SetVector2DParameter
// 0x0018 (0x0018 - 0x0000)
struct NiagaraParameterCollectionInstance_SetVector2DParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              InValue;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraParameterCollectionInstance_SetVector2DParameter) == 0x000008, "Wrong alignment on NiagaraParameterCollectionInstance_SetVector2DParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_SetVector2DParameter) == 0x000018, "Wrong size on NiagaraParameterCollectionInstance_SetVector2DParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetVector2DParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_SetVector2DParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetVector2DParameter, InValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_SetVector2DParameter::InValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.SetVector4Parameter
// 0x0020 (0x0020 - 0x0000)
struct NiagaraParameterCollectionInstance_SetVector4Parameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               InValue;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraParameterCollectionInstance_SetVector4Parameter) == 0x000010, "Wrong alignment on NiagaraParameterCollectionInstance_SetVector4Parameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_SetVector4Parameter) == 0x000020, "Wrong size on NiagaraParameterCollectionInstance_SetVector4Parameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetVector4Parameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_SetVector4Parameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetVector4Parameter, InValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_SetVector4Parameter::InValue' has a wrong offset!");

// Function Niagara.NiagaraParameterCollectionInstance.SetVectorParameter
// 0x0020 (0x0020 - 0x0000)
struct NiagaraParameterCollectionInstance_SetVectorParameter final
{
public:
	class FString                                 InVariableName;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InValue;                                           // 0x0010(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(NiagaraParameterCollectionInstance_SetVectorParameter) == 0x000008, "Wrong alignment on NiagaraParameterCollectionInstance_SetVectorParameter");
static_assert(sizeof(NiagaraParameterCollectionInstance_SetVectorParameter) == 0x000020, "Wrong size on NiagaraParameterCollectionInstance_SetVectorParameter");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetVectorParameter, InVariableName) == 0x000000, "Member 'NiagaraParameterCollectionInstance_SetVectorParameter::InVariableName' has a wrong offset!");
static_assert(offsetof(NiagaraParameterCollectionInstance_SetVectorParameter, InValue) == 0x000010, "Member 'NiagaraParameterCollectionInstance_SetVectorParameter::InValue' has a wrong offset!");

// Function Niagara.NiagaraPreviewBase.SetLabelText
// 0x0030 (0x0030 - 0x0000)
struct NiagaraPreviewBase_SetLabelText final
{
public:
	class FText                                   InXAxisText;                                       // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   InYAxisText;                                       // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraPreviewBase_SetLabelText) == 0x000008, "Wrong alignment on NiagaraPreviewBase_SetLabelText");
static_assert(sizeof(NiagaraPreviewBase_SetLabelText) == 0x000030, "Wrong size on NiagaraPreviewBase_SetLabelText");
static_assert(offsetof(NiagaraPreviewBase_SetLabelText, InXAxisText) == 0x000000, "Member 'NiagaraPreviewBase_SetLabelText::InXAxisText' has a wrong offset!");
static_assert(offsetof(NiagaraPreviewBase_SetLabelText, InYAxisText) == 0x000018, "Member 'NiagaraPreviewBase_SetLabelText::InYAxisText' has a wrong offset!");

// Function Niagara.NiagaraPreviewBase.SetSystem
// 0x0008 (0x0008 - 0x0000)
struct NiagaraPreviewBase_SetSystem final
{
public:
	class UNiagaraSystem*                         InSystem;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraPreviewBase_SetSystem) == 0x000008, "Wrong alignment on NiagaraPreviewBase_SetSystem");
static_assert(sizeof(NiagaraPreviewBase_SetSystem) == 0x000008, "Wrong size on NiagaraPreviewBase_SetSystem");
static_assert(offsetof(NiagaraPreviewBase_SetSystem, InSystem) == 0x000000, "Member 'NiagaraPreviewBase_SetSystem::InSystem' has a wrong offset!");

// Function Niagara.NiagaraPreviewAxis.ApplyToPreview
// 0x0020 (0x0020 - 0x0000)
struct NiagaraPreviewAxis_ApplyToPreview final
{
public:
	class UNiagaraComponent*                      PreviewComponent;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PreviewIndex;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsXAxis;                                          // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutLabelText;                                      // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraPreviewAxis_ApplyToPreview) == 0x000008, "Wrong alignment on NiagaraPreviewAxis_ApplyToPreview");
static_assert(sizeof(NiagaraPreviewAxis_ApplyToPreview) == 0x000020, "Wrong size on NiagaraPreviewAxis_ApplyToPreview");
static_assert(offsetof(NiagaraPreviewAxis_ApplyToPreview, PreviewComponent) == 0x000000, "Member 'NiagaraPreviewAxis_ApplyToPreview::PreviewComponent' has a wrong offset!");
static_assert(offsetof(NiagaraPreviewAxis_ApplyToPreview, PreviewIndex) == 0x000008, "Member 'NiagaraPreviewAxis_ApplyToPreview::PreviewIndex' has a wrong offset!");
static_assert(offsetof(NiagaraPreviewAxis_ApplyToPreview, bIsXAxis) == 0x00000C, "Member 'NiagaraPreviewAxis_ApplyToPreview::bIsXAxis' has a wrong offset!");
static_assert(offsetof(NiagaraPreviewAxis_ApplyToPreview, OutLabelText) == 0x000010, "Member 'NiagaraPreviewAxis_ApplyToPreview::OutLabelText' has a wrong offset!");

// Function Niagara.NiagaraPreviewAxis.Num
// 0x0004 (0x0004 - 0x0000)
struct NiagaraPreviewAxis_Num final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraPreviewAxis_Num) == 0x000004, "Wrong alignment on NiagaraPreviewAxis_Num");
static_assert(sizeof(NiagaraPreviewAxis_Num) == 0x000004, "Wrong size on NiagaraPreviewAxis_Num");
static_assert(offsetof(NiagaraPreviewAxis_Num, ReturnValue) == 0x000000, "Member 'NiagaraPreviewAxis_Num::ReturnValue' has a wrong offset!");

// Function Niagara.NiagaraPreviewGrid.ActivatePreviews
// 0x0001 (0x0001 - 0x0000)
struct NiagaraPreviewGrid_ActivatePreviews final
{
public:
	bool                                          bReset;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraPreviewGrid_ActivatePreviews) == 0x000001, "Wrong alignment on NiagaraPreviewGrid_ActivatePreviews");
static_assert(sizeof(NiagaraPreviewGrid_ActivatePreviews) == 0x000001, "Wrong size on NiagaraPreviewGrid_ActivatePreviews");
static_assert(offsetof(NiagaraPreviewGrid_ActivatePreviews, bReset) == 0x000000, "Member 'NiagaraPreviewGrid_ActivatePreviews::bReset' has a wrong offset!");

// Function Niagara.NiagaraPreviewGrid.GetPreviews
// 0x0010 (0x0010 - 0x0000)
struct NiagaraPreviewGrid_GetPreviews final
{
public:
	TArray<class UNiagaraComponent*>              OutPreviews;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraPreviewGrid_GetPreviews) == 0x000008, "Wrong alignment on NiagaraPreviewGrid_GetPreviews");
static_assert(sizeof(NiagaraPreviewGrid_GetPreviews) == 0x000010, "Wrong size on NiagaraPreviewGrid_GetPreviews");
static_assert(offsetof(NiagaraPreviewGrid_GetPreviews, OutPreviews) == 0x000000, "Member 'NiagaraPreviewGrid_GetPreviews::OutPreviews' has a wrong offset!");

// Function Niagara.NiagaraPreviewGrid.SetPaused
// 0x0001 (0x0001 - 0x0000)
struct NiagaraPreviewGrid_SetPaused final
{
public:
	bool                                          bPaused;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraPreviewGrid_SetPaused) == 0x000001, "Wrong alignment on NiagaraPreviewGrid_SetPaused");
static_assert(sizeof(NiagaraPreviewGrid_SetPaused) == 0x000001, "Wrong size on NiagaraPreviewGrid_SetPaused");
static_assert(offsetof(NiagaraPreviewGrid_SetPaused, bPaused) == 0x000000, "Member 'NiagaraPreviewGrid_SetPaused::bPaused' has a wrong offset!");

}

